{"ast":null,"code":"var _jsxFileName = \"/home/fenix3819/Holberton/TechstarsPortfolioProject/techstar_app/src/components/Survey.jsx\";\nimport React, { useState } from \"react\";\nimport '../assets/styles/Survey.css';\nimport { Avatar, Slider } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { AiOutlineCheckCircle, AiOutlineBulb, AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Survey(props) {\n  const marks = {\n    1: {\n      style: {\n        color: '#ff0000'\n      },\n      label: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 42\n      }, this)\n    },\n    2: '2',\n    3: '3',\n    4: '4',\n    5: {\n      style: {\n        color: '#39C463'\n      },\n      label: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this)\n    }\n  };\n  const Button = styled.button`\n  /* Same as above */\n`;\n  const ButtonToggle = styled(Button)`\n  opacity: 0.6;\n  ${({\n    active\n  }) => active && `\n    opacity: 1;\n  `}\n`;\n  const ButtonGroup = styled.div`\n  display: flex;\n`;\n  const types = [\"Want To\", \"Willing\", \"Won't\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey-box\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        size: 80,\n        icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.meetings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: types.map(type => /*#__PURE__*/_jsxDEV(ButtonToggle, {\n          active: active === type,\n          onClick: () => setActive(type),\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"slidetxt\",\n          children: \"Mentor Helpfullness\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          min: 1,\n          max: 5,\n          marks: marks,\n          defaultValue: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"slidetxt\",\n          children: \"Please Explain: (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"feedback\",\n        cols: \"20\",\n        rows: \"5\",\n        placeholder: \"Type here\",\n        name: \"Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Survey;\nexport default Survey;\n\nvar _c;\n\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"sources":["/home/fenix3819/Holberton/TechstarsPortfolioProject/techstar_app/src/components/Survey.jsx"],"names":["React","useState","Avatar","Slider","UserOutlined","styled","AiOutlineCheckCircle","AiOutlineBulb","AiOutlineCloseCircle","Survey","props","marks","style","color","label","Button","button","ButtonToggle","active","ButtonGroup","div","types","meetings","map","type","setActive"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport '../assets/styles/Survey.css'\nimport { Avatar, Slider } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { AiOutlineCheckCircle, AiOutlineBulb, AiOutlineCloseCircle } from \"react-icons/ai\";\n\nfunction Survey(props) {\n\n  const marks = {\n    1: {style: {color: '#ff0000'},label: <strong>1</strong>,},\n    2: '2',\n    3: '3',\n    4: '4',\n    5: {\n      style: {\n        color: '#39C463',\n      },\n      label: <strong>5</strong>,\n    },\n  };\n\n  const Button = styled.button`\n  /* Same as above */\n`;\n\n  const ButtonToggle = styled(Button)`\n  opacity: 0.6;\n  ${({ active }) =>\n    active &&\n    `\n    opacity: 1;\n  `}\n`;\n\n  const ButtonGroup = styled.div`\n  display: flex;\n`;\n\nconst types = [\"Want To\", \"Willing\", \"Won't\"];\n\n  return(\n        <div className=\"container\">\n          <div className=\"survey-box\">\n            <Avatar size={80} icon={<UserOutlined />} />\n            <span>{props.meetings}</span>\n            <ButtonGroup>\n              {types.map(type => (\n                <ButtonToggle\n                  key={type}\n                  active={active === type}\n                  onClick={() => setActive(type)}>\n                  {type}\n                </ButtonToggle>\n                ))}\n            </ButtonGroup>\n            {/* <div className='buttons'>\n              <button input type='checkbox' className='button1'><AiOutlineCheckCircle size={20}/><span className='icontxt'>Want To</span></button>\n              <button className='button2'><AiOutlineBulb size={20}/><span className='icontxt'>Willing</span></button>\n              <button className='button3'><AiOutlineCloseCircle size={20}/><span className='icontxt'>Won't</span></button>\n            </div> */}\n            <div className='slider'>\n              <p className='slidetxt'>Mentor Helpfullness</p>\n              <Slider min={1} max={5} marks={marks} defaultValue={1}/>\n            </div>\n            <div>\n              <p className='slidetxt'>Please Explain: (Optional)</p>\n            </div>\n            <textarea className='feedback' cols=\"20\" rows=\"5\" placeholder=\"Type here\" name=\"Feedback\" />\n            <button className='button'>Submit</button>\n          </div>\n        </div>\n  )\n}\nexport default Survey;\n"]},"metadata":{},"sourceType":"module"}