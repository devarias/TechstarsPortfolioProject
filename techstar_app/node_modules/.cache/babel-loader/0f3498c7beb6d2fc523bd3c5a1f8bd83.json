{"ast":null,"code":"var _jsxFileName = \"/home/fenix3819/Holberton/TechstarsPortfolioProject/techstar_app/src/components/Name.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getData, getName } from './Data';\nimport Survey from './Survey';\nimport { Row, Col } from 'antd';\nimport '../assets/styles/Survey.css';\nimport { useLocation } from 'react-router-dom';\nimport ReactCardFlip from 'react-card-flip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Name(props) {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [mentorName, setMentorName] = useState('');\n  const id = useLocation().pathname.slice(8);\n  useEffect(async () => {\n    let mounted = true;\n    await getData().then(items => {\n      if (mounted) {\n        setList(items);\n      }\n    });\n    await getName(id).then(name => {\n      setMentorName(name);\n    });\n    return () => mounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    justify: \"center\",\n    align: \"top\",\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    children: list.map((meet, i) => {\n      if (meet.mentor === mentorName\n      /* && meet.slot !== null */\n      ) {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            meetings: meet.company,\n            children: /*#__PURE__*/_jsxDEV(Survey, {\n              meetings: meet.company,\n              vals: 0,\n              isFlipped: isFlipped,\n              flip: flip,\n              card: list[i],\n              children: meet.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this);\n        }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Name, \"rPp7OBYvvOIHT0pzrUWm/RgdER8=\", false, function () {\n  return [useLocation];\n});\n\n_c = Name;\nexport default Name;\n\nvar _c;\n\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"sources":["/home/fenix3819/Holberton/TechstarsPortfolioProject/techstar_app/src/components/Name.jsx"],"names":["React","useEffect","useState","getData","getName","Survey","Row","Col","useLocation","ReactCardFlip","Name","props","list","setList","mentorName","setMentorName","id","pathname","slice","mounted","then","items","name","xs","sm","md","lg","map","meet","i","mentor","company","isFlipped","flip"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,QAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,OAAO,6BAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMc,EAAE,GAAGR,WAAW,GAAGS,QAAd,CAAuBC,KAAvB,CAA6B,CAA7B,CAAX;AAEAjB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIkB,OAAO,GAAG,IAAd;AACA,UAAMhB,OAAO,GAAGiB,IAAV,CAAgBC,KAAD,IAAW;AAC9B,UAAIF,OAAJ,EAAa;AACXN,QAAAA,OAAO,CAACQ,KAAD,CAAP;AACD;AACF,KAJK,CAAN;AAKA,UAAMjB,OAAO,CAACY,EAAD,CAAP,CAAYI,IAAZ,CAAkBE,IAAD,IAAU;AAC/BP,MAAAA,aAAa,CAACO,IAAD,CAAb;AACD,KAFK,CAAN;AAIA,WAAO,MAAOH,OAAO,GAAG,KAAxB;AACD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE,QAAC,GAAD;AACE,IAAA,OAAO,EAAC,QADV;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,MAAM,EAAE;AAAEI,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE,EAAb;AAAiBC,MAAAA,EAAE,EAAE,EAArB;AAAyBC,MAAAA,EAAE,EAAE;AAA7B,KAHV;AAAA,cAKGd,IAAI,CAACe,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrB,UAAID,IAAI,CAACE,MAAL,KAAgBhB;AAAW;AAA/B,QAA4D;AAC1D,8BACE,QAAC,GAAD;AAAa,YAAA,QAAQ,EAAEc,IAAI,CAACG,OAA5B;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,QAAQ,EAAEH,IAAI,CAACG,OADjB;AAEE,cAAA,IAAI,EAAE,CAFR;AAGE,cAAA,SAAS,EAAEC,SAHb;AAIE,cAAA,IAAI,EAAEC,IAJR;AAKE,cAAA,IAAI,EAAErB,IAAI,CAACiB,CAAD,CALZ;AAAA,wBAOGD,IAAI,CAACG;AAPR;AAAA;AAAA;AAAA;AAAA;AADF,aAAUF,CAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAaD;AACF,KAhBA;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA5CQnB,I;UAGIF,W;;;KAHJE,I;AA6CT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getData, getName } from './Data';\nimport Survey from './Survey';\nimport { Row, Col } from 'antd';\nimport '../assets/styles/Survey.css';\nimport { useLocation } from 'react-router-dom';\nimport ReactCardFlip from 'react-card-flip';\n\nfunction Name(props) {\n  const [list, setList] = useState([]);\n  const [mentorName, setMentorName] = useState('');\n  const id = useLocation().pathname.slice(8);\n\n  useEffect(async () => {\n    let mounted = true;\n    await getData().then((items) => {\n      if (mounted) {\n        setList(items);\n      }\n    });\n    await getName(id).then((name) => {\n      setMentorName(name);\n    });\n\n    return () => (mounted = false);\n  }, []);\n\n  return (\n    <Row\n      justify='center'\n      align='top'\n      gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\n    >\n      {list.map((meet, i) => {\n        if (meet.mentor === mentorName /* && meet.slot !== null */) {\n          return (\n            <Col key={i} meetings={meet.company}>\n              <Survey\n                meetings={meet.company}\n                vals={0}\n                isFlipped={isFlipped}\n                flip={flip}\n                card={list[i]}\n              >\n                {meet.company}\n              </Survey>\n            </Col>\n          );\n        }\n      })}\n    </Row>\n  );\n}\nexport default Name;\n"]},"metadata":{},"sourceType":"module"}