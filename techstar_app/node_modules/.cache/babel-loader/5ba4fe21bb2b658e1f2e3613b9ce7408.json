{"ast":null,"code":"var _jsxFileName = \"/home/fenix3819/Holberton/TechstarsPortfolioProject/techstar_app/src/components/Name.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getDataMentors, getDataCompanies, getMentorName, getCompanyName, mentorOrCompany } from './Data';\nimport Survey from './Survey';\nimport HeaderComp from './HeaderComp';\nimport HeaderMent from './HeaderMent';\nimport { Row, Col } from 'antd';\nimport { useLocation } from 'react-router-dom';\nimport ColoredScrollbars from './ColoredScrollbars';\nimport '../assets/styles/Survey.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let unit;\n\nfunction Name() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [list, setList] = useState([]);\n  const [flag, setFlag] = useState(0);\n  const [msg, setMsg] = useState('');\n  const id = useLocation().pathname.slice(8);\n  useEffect(async () => {\n    const flaggy = await mentorOrCompany(id);\n    setFlag(flaggy);\n\n    if (flaggy === 1) {\n      await getMentorName(id).then(async name => {\n        setName(name);\n        await getDataMentors(id).then(list => {\n          setList(list[0]);\n        }).catch(error => {\n          console.error(error);\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n      setMsg('Company Preparedness');\n    } else if (flaggy === 2) {\n      await getCompanyName(id).then(async name => {\n        setName(name);\n        await getDataCompanies(id).then(list => {\n          setList(list[0]);\n        }).catch(error => {\n          console.error(error);\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n      setMsg('Mentor Helpfullness');\n    }\n  }, []);\n\n  function showSurveys() {\n    const voteUpd = flag === 1 ? {\n      3: 1,\n      1: 2,\n      0: 3\n    } : {\n      2: 1,\n      1: 2,\n      0: 3\n    };\n\n    if (list[name] && flag === 1) {\n      return list[name].filter(meet => meet.meetingDone === true).map((elem, i) => {\n        if (elem.survey_id !== null) {\n          return unit = i, /*#__PURE__*/_jsxDEV(Col, {\n            meetings: elem.company,\n            children: /*#__PURE__*/_jsxDEV(Survey, {\n              meetings: elem.company,\n              vals: voteUpd[elem.mentorVote],\n              txt: msg,\n              txtA: elem.mentorFeedback,\n              element: elem,\n              btn: 1,\n              c: 1,\n              children: elem.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this);\n        } else {\n          return unit = i, /*#__PURE__*/_jsxDEV(Col, {\n            meetings: elem.company,\n            children: /*#__PURE__*/_jsxDEV(Survey, {\n              meetings: elem.company,\n              vals: 0,\n              txt: msg,\n              element: elem,\n              btn: 2,\n              c: 1,\n              children: elem.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this);\n        }\n      });\n    } else if (list[name] && flag === 2) {\n      return list[name].filter(meet => meet.meetingDone === true).map((elem, i) => {\n        if (elem.meetingDone === true) {\n          if (elem.survey_id !== null) {\n            return unit = i, /*#__PURE__*/_jsxDEV(Col, {\n              meetings: elem.mentor,\n              children: /*#__PURE__*/_jsxDEV(Survey, {\n                meetings: elem.mentor,\n                vals: voteUpd[elem.companyVote],\n                txt: msg,\n                txtA: elem.companyFeedback,\n                element: elem,\n                btn: 1,\n                c: 2,\n                children: elem.mentor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this);\n          } else {\n            return unit = i, /*#__PURE__*/_jsxDEV(Col, {\n              meetings: elem.mentor,\n              children: /*#__PURE__*/_jsxDEV(Survey, {\n                meetings: elem.mentor,\n                vals: 0,\n                txt: msg,\n                element: elem,\n                btn: 2,\n                c: 2,\n                children: elem.mentor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this);\n          }\n        }\n      });\n    }\n  }\n\n  function showHeader() {\n    if (flag === 1) {\n      return /*#__PURE__*/_jsxDEV(HeaderMent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 14\n      }, this);\n    } else if (flag === 2) {\n      return /*#__PURE__*/_jsxDEV(HeaderComp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ColoredScrollbars, {\n      style: {\n        zIndex: 3,\n        height: '100vh'\n      },\n      children: [showHeader(), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        align: \"top\",\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        children: showSurveys()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Name, \"YjN8IBamDhtbBWvSQiBAKqU/Kvs=\", false, function () {\n  return [useLocation];\n});\n\n_c = Name;\nexport default Name;\n\nvar _c;\n\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"sources":["/home/fenix3819/Holberton/TechstarsPortfolioProject/techstar_app/src/components/Name.jsx"],"names":["React","useEffect","useState","getDataMentors","getDataCompanies","getMentorName","getCompanyName","mentorOrCompany","Survey","HeaderComp","HeaderMent","Row","Col","useLocation","ColoredScrollbars","unit","Name","name","setName","list","setList","flag","setFlag","msg","setMsg","id","pathname","slice","flaggy","then","catch","error","console","showSurveys","voteUpd","filter","meet","meetingDone","map","elem","i","survey_id","company","mentorVote","mentorFeedback","mentor","companyVote","companyFeedback","showHeader","zIndex","height","xs","sm","md","lg"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  getDataMentors,\n  getDataCompanies,\n  getMentorName,\n  getCompanyName,\n  mentorOrCompany,\n} from './Data';\nimport Survey from './Survey';\nimport HeaderComp from './HeaderComp';\nimport HeaderMent from './HeaderMent';\nimport { Row, Col } from 'antd';\nimport { useLocation } from 'react-router-dom';\nimport ColoredScrollbars from './ColoredScrollbars';\nimport '../assets/styles/Survey.css';\nexport let unit;\n\nfunction Name() {\n  const [name, setName] = useState('');\n  const [list, setList] = useState([]);\n  const [flag, setFlag] = useState(0);\n  const [msg, setMsg] = useState('');\n  const id = useLocation().pathname.slice(8);\n\n  useEffect(async () => {\n    const flaggy = await mentorOrCompany(id);\n    setFlag(flaggy);\n    if (flaggy === 1) {\n      await getMentorName(id)\n        .then(async (name) => {\n          setName(name);\n          await getDataMentors(id)\n            .then((list) => {\n              setList(list[0]);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      setMsg('Company Preparedness');\n    } else if (flaggy === 2) {\n      await getCompanyName(id)\n        .then(async (name) => {\n          setName(name);\n          await getDataCompanies(id)\n            .then((list) => {\n              setList(list[0]);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      setMsg('Mentor Helpfullness');\n    }\n  }, []);\n  function showSurveys() {\n    const voteUpd = flag === 1 ? { 3: 1, 1: 2, 0: 3 } : { 2: 1, 1: 2, 0: 3 };\n    if (list[name] && flag === 1) {\n      return list[name]\n        .filter((meet) => meet.meetingDone === true)\n        .map((elem, i) => {\n          if (elem.survey_id !== null) {\n            return (\n              (unit = i),\n              (\n                <Col key={i} meetings={elem.company}>\n                  <Survey\n                    meetings={elem.company}\n                    vals={voteUpd[elem.mentorVote]}\n                    txt={msg}\n                    txtA={elem.mentorFeedback}\n                    element={elem}\n                    btn={1}\n                    c={1}\n                  >\n                    {elem.company}\n                  </Survey>\n                </Col>\n              )\n            );\n          } else {\n            return (\n              (unit = i),\n              (\n                <Col key={i} meetings={elem.company}>\n                  <Survey\n                    meetings={elem.company}\n                    vals={0}\n                    txt={msg}\n                    element={elem}\n                    btn={2}\n                    c={1}\n                  >\n                    {elem.company}\n                  </Survey>\n                </Col>\n              )\n            );\n          }\n        });\n    } else if (list[name] && flag === 2) {\n      return list[name]\n        .filter((meet) => meet.meetingDone === true)\n        .map((elem, i) => {\n          if (elem.meetingDone === true) {\n            if (elem.survey_id !== null) {\n              return (\n                (unit = i),\n                (\n                  <Col key={i} meetings={elem.mentor}>\n                    <Survey\n                      meetings={elem.mentor}\n                      vals={voteUpd[elem.companyVote]}\n                      txt={msg}\n                      txtA={elem.companyFeedback}\n                      element={elem}\n                      btn={1}\n                      c={2}\n                    >\n                      {elem.mentor}\n                    </Survey>\n                  </Col>\n                )\n              );\n            } else {\n              return (\n                (unit = i),\n                (\n                  <Col key={i} meetings={elem.mentor}>\n                    <Survey\n                      meetings={elem.mentor}\n                      vals={0}\n                      txt={msg}\n                      element={elem}\n                      btn={2}\n                      c={2}\n                    >\n                      {elem.mentor}\n                    </Survey>\n                  </Col>\n                )\n              );\n            }\n          }\n        });\n    }\n  }\n  function showHeader() {\n    if (flag === 1) {\n      return <HeaderMent />;\n    } else if (flag === 2) {\n      return <HeaderComp />;\n    }\n  }\n  return (\n    <>\n      <ColoredScrollbars style={{ zIndex: 3, height: '100vh' }}>\n        {showHeader()}\n        <Row\n          justify='center'\n          align='top'\n          gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\n        >\n          {showSurveys()}\n        </Row>\n      </ColoredScrollbars>\n    </>\n  );\n}\nexport default Name;\n"]},"metadata":{},"sourceType":"module"}