[{"/home/omsebas/techstars_heroku/client/src/index.js":"1","/home/omsebas/techstars_heroku/client/src/App.js":"2","/home/omsebas/techstars_heroku/client/src/reportWebVitals.js":"3","/home/omsebas/techstars_heroku/client/src/components/Page.jsx":"4","/home/omsebas/techstars_heroku/client/src/components/Spinner.jsx":"5","/home/omsebas/techstars_heroku/client/src/components/StartButton.jsx":"6","/home/omsebas/techstars_heroku/client/src/components/UploadFile.jsx":"7","/home/omsebas/techstars_heroku/client/src/components/DropDown.jsx":"8","/home/omsebas/techstars_heroku/client/src/components/Navsider.jsx":"9","/home/omsebas/techstars_heroku/client/src/components/TableReschedule.jsx":"10","/home/omsebas/techstars_heroku/client/src/components/ModifySurvey.jsx":"11","/home/omsebas/techstars_heroku/client/src/components/TableSchedule.jsx":"12","/home/omsebas/techstars_heroku/client/src/components/Menu.jsx":"13","/home/omsebas/techstars_heroku/client/src/components/ColorCode.jsx":"14","/home/omsebas/techstars_heroku/client/src/components/TableResults.jsx":"15","/home/omsebas/techstars_heroku/client/src/components/LogoutButton.jsx":"16","/home/omsebas/techstars_heroku/client/src/components/ManageSurveyTable.jsx":"17","/home/omsebas/techstars_heroku/client/src/components/ModalBox.jsx":"18","/home/omsebas/techstars_heroku/client/src/Parts/CellPopOver.jsx":"19","/home/omsebas/techstars_heroku/client/src/Parts/buttonsOfPopUp.jsx":"20","/home/omsebas/techstars_heroku/client/src/components/LoadTable.jsx":"21"},{"size":731,"mtime":1615494501771,"results":"22","hashOfConfig":"23"},{"size":528,"mtime":1615696654275,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1615494501771,"results":"25","hashOfConfig":"23"},{"size":2716,"mtime":1615696659399,"results":"26","hashOfConfig":"23"},{"size":147,"mtime":1615494501771,"results":"27","hashOfConfig":"23"},{"size":343,"mtime":1615494501771,"results":"28","hashOfConfig":"23"},{"size":5219,"mtime":1615590541003,"results":"29","hashOfConfig":"23"},{"size":2274,"mtime":1615494501771,"results":"30","hashOfConfig":"23"},{"size":2222,"mtime":1615696654451,"results":"31","hashOfConfig":"23"},{"size":1343,"mtime":1615601783357,"results":"32","hashOfConfig":"23"},{"size":2077,"mtime":1615494501771,"results":"33","hashOfConfig":"23"},{"size":14555,"mtime":1615742227659,"results":"34","hashOfConfig":"23"},{"size":614,"mtime":1615494501771,"results":"35","hashOfConfig":"23"},{"size":829,"mtime":1615494501771,"results":"36","hashOfConfig":"23"},{"size":3662,"mtime":1615739922038,"results":"37","hashOfConfig":"23"},{"size":277,"mtime":1615494501771,"results":"38","hashOfConfig":"23"},{"size":936,"mtime":1615494501771,"results":"39","hashOfConfig":"23"},{"size":1565,"mtime":1615696654451,"results":"40","hashOfConfig":"23"},{"size":1102,"mtime":1615679774150,"results":"41","hashOfConfig":"23"},{"size":1149,"mtime":1615686386170,"results":"42","hashOfConfig":"23"},{"size":1152,"mtime":1615696654451,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"5wg4bu",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/omsebas/techstars_heroku/client/src/index.js",[],["90","91"],"/home/omsebas/techstars_heroku/client/src/App.js",[],"/home/omsebas/techstars_heroku/client/src/reportWebVitals.js",[],"/home/omsebas/techstars_heroku/client/src/components/Page.jsx",["92"],"import React, { useState, useEffect } from \"react\";\nimport { Layout } from \"antd\";\nimport TableSchedule from \"./TableSchedule\";\nimport { Row, Col } from \"antd\";\nimport CSVReader2 from \"./UploadFile\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navsider from \"./Navsider\";\nimport TableReschedule from \"./TableReschedule\";\nimport SurveyStatus from \"./ModifySurvey\";\nimport \"../styles/Page.css\";\nimport LoadTable from './LoadTable';\n\nconst { Content, Sider } = Layout;\n\nconst Page = () => {\n  const [view, setView] = useState(0);\n  const [collapsed, setCollapse] = useState(false);\n  const [resSchedule, setResSchedule] = useState([]);\n  const [viewSelect, setViewSelect] = useState([\"0\"]);\n  /* state to control the view of the table, it assures that all the content necessary is caught */\n  const [tableDisplay, setTableDisplay] = useState(null);\n  /* companies variable returned from the back-end */\n  const [companies, setCompanies] = useState([]);\n\n  const getData = async () => {\n    const response = await fetch(\n     'http://localhost:3033/api/companies',\n     {\n       method: 'GET',\n       headers: {\n         'content-Type': 'application/json',\n         Accept: 'aplication/json',\n       },\n     } \n    );\n    return response.json();\n  };\n\n  useEffect(async() => {\n    let result = await getData();\n    setCompanies(result);\n    setTableDisplay(true);\n  }, []);\n\n  const classObjects = [\n    \"home\",\n    \"surveyStatus\",\n    \"results\",\n    \"charts\",\n    \"table\",\n  ];\n  const pathRoute = [\n    \"/Home\",\n    \"/SurveyStatus\",\n    \"/Results\",\n    \"/GenerateMeetings\",\n    \"/MeetingsTable\",\n  ];\n  const onCollapse = (collapsed) => setCollapse(collapsed);\n  const viewObjects = [\n    \"home\",\n    <SurveyStatus />,\n    <LoadTable/>,\n    <CSVReader2\n      setResSchedule={setResSchedule}\n      setView={setView}\n      setViewSelect={setViewSelect}\n    />,\n    <TableSchedule resSchedule={resSchedule} companies={companies} tableDisplay={tableDisplay}/>,\n    <TableReschedule />,\n  ];\n\n  return (\n    <Router>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n          <Navsider setView={setView} viewselect={viewSelect} />\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Content>\n            <Row className=\"content\">\n              <Switch>\n                <Route path={pathRoute[view]}>\n                  <Col span={24} className={classObjects[view]}>\n                    {viewObjects[view]}\n                  </Col>\n                </Route>\n              </Switch>\n            </Row>\n          </Content>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n};\n\nexport default Page;\n","/home/omsebas/techstars_heroku/client/src/components/Spinner.jsx",[],"/home/omsebas/techstars_heroku/client/src/components/StartButton.jsx",[],"/home/omsebas/techstars_heroku/client/src/components/UploadFile.jsx",["93"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CSVReader } from \"react-papaparse\";\nimport { Button } from \"antd\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport \"../styles/UploadFile.css\";\n\n/**\n * UploadFile si the component to upload the CSV to generate the schedule\n * @setReschedule: this setter sends the response schedule data from the back-end to\n * be used to\n * build the datatable.\n * @setView: is used to redirect automatically from the generate meeting section to\n * the meeting table view\n */\nconst UploadFile = ({ setResSchedule, setView }) => {\n  /* isReset manages the unmounting process for the uploaded CSV file*/\n  const [isReset, setIsReset] = useState(false);\n  /* jsonData stores the data of the uploaded CSV */\n  const [jsonData, setJsonData] = useState(null);\n  /* fetched is used to know when the the generation of the schedule is done to redirect\n   * the user to the scheduling table */\n  const [fetched, setFetched] = useState(false);\n  const [loading, setLoading] = useState(0);\n  const message = [\n    \"Drop CSV file here or click to upload\",\n    \"Generating schedule.\\nPlease wait to be redirected\",\n  ];\n  const history = useHistory();\n\n  /* This effect redirects from this component to the table schedule view and cleans \n  this component*/\n  useEffect(() => {\n    if (fetched === true) {\n      history.push(\"/MeetingsTable\");\n      setView(5);\n    }\n    return () => {};\n  }, [fetched]);\n\n  /* This funtions handles the actions when a CSV file is uploaded */\n  const handleOnDrop = (data) => {\n    const data_list = data.map((row) => row.data);\n    setJsonData(JSON.stringify(data_list));\n  };\n\n  /* This function handles Error with the uploaded file */\n  const handleOnError = (err, file, inputElem, reason) => {\n    alert(err);\n    setIsReset(true);\n    setJsonData(null);\n    alert(\"Error: %s\", reason);\n  };\n\n  /* Removes the file from the front-end to allow the upload of another file \n  or when an error ocurred */\n  const handleOnRemoveFile = (data) => {\n    setIsReset(true);\n    setJsonData(null);\n  };\n\n  /* Handles the querying to the back-end to generate the shedule*/\n  const handleSubmit = () => {\n    if (jsonData !== null) {\n      if (\n        window.confirm(\n          \"A new meeting schedule is going to be generated\\nand the actual schedule will be erased\\nDo you want to continue?\"\n        )\n      ) {\n        setIsReset(true);\n        setLoading(1);\n        fetch(\n          \"http://localhost:3033/api/schedule\" /* Route to send the CSV file to \n                                                    generate the schedule */,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            body: jsonData,\n          }\n        )\n          .then((response) => response.json())\n          .then((result) => {\n            /*result is the generated schedule without conflicts*/\n            setResSchedule(result);\n            setIsReset(true);\n            /* with this we call the use effect to redirect to other component and clean \n              the actual component */\n            setFetched(true);\n          })\n          .catch((error) => {\n            setIsReset(true);\n            setJsonData(null);\n            console.error(\"Error:\", error);\n          });\n      } else {\n        setIsReset(true);\n      }\n    }\n  };\n\n  const handleSubmitButton = () => {\n    if (jsonData !== null) {\n      return (\n        <Button\n          id=\"buttonUpload\"\n          type=\"primary\"\n          shape=\"round\"\n          icon={<SendOutlined />}\n          onClick={handleSubmit}\n        >\n          Submit\n        </Button>\n      );\n    }\n  };\n  return (\n    <>\n      <CSVReader\n        className=\"boxCsvParser\"\n        accept=\"text/csv, .csv, application/vnd.ms-excel\"\n        progressBarColor=\"#39C463\"\n        onDrop={handleOnDrop}\n        onError={handleOnError}\n        s\n        addRemoveButton\n        isReset={isReset}\n        onRemoveFile={handleOnRemoveFile}\n        config={{ header: true }}\n        style={{\n          dropArea: {\n            borderColor: \"pink\",\n            height: 200,\n            width: 400,\n            borderRadius: 20,\n          },\n          dropAreaActive: {\n            borderColor: \"red\",\n          },\n          dropFile: {\n            width: 100,\n            height: 100,\n            background: \"#ccc\",\n          },\n          fileSizeInfo: {\n            color: \"#000\",\n            backgroundColor: \"#fff\",\n            borderRadius: 3,\n            lineHeight: 1,\n            marginBottom: \"0.5em\",\n            padding: \"0 0.4em\",\n          },\n          fileNameInfo: {\n            color: \"#000\",\n            backgroundColor: \"#fff\",\n            borderRadius: 3,\n            fontSize: 14,\n            lineHeight: 1,\n            padding: \"0 0.4em\",\n          },\n          removeButton: {\n            color: \"#39C463\",\n          },\n          progressBar: {\n            backgroundColor: \"#39C463\",\n          },\n        }}\n      >\n        <span>{message[loading]}</span>\n      </CSVReader>\n      {handleSubmitButton()}\n    </>\n  );\n};\n\nexport default UploadFile;\n","/home/omsebas/techstars_heroku/client/src/components/DropDown.jsx",[],"/home/omsebas/techstars_heroku/client/src/components/Navsider.jsx",[],"/home/omsebas/techstars_heroku/client/src/components/TableReschedule.jsx",[],"/home/omsebas/techstars_heroku/client/src/components/ModifySurvey.jsx",[],"/home/omsebas/techstars_heroku/client/src/components/TableSchedule.jsx",["94","95","96","97","98","99","100","101","102","103"],"/home/omsebas/techstars_heroku/client/src/components/Menu.jsx",[],"/home/omsebas/techstars_heroku/client/src/components/ColorCode.jsx",[],"/home/omsebas/techstars_heroku/client/src/components/TableResults.jsx",[],"/home/omsebas/techstars_heroku/client/src/components/LogoutButton.jsx",[],"/home/omsebas/techstars_heroku/client/src/components/ManageSurveyTable.jsx",[],"/home/omsebas/techstars_heroku/client/src/components/ModalBox.jsx",[],"/home/omsebas/techstars_heroku/client/src/Parts/CellPopOver.jsx",["104","105"],"import React, { useState } from \"react\";\nimport { Popover, Button } from \"antd\";\nimport PopButtons from \"./buttonsOfPopUp\";\nimport \"../styles/CellPopOver.css\";\n/**\n * component that renders the popup menu of each cell on tableschedule\n * props:\n * @param {text} : the company name for the cell\n * @param {record}: It is used to detect with row was activated and return his key\n * fetch the cancel action to the backend\n * @returns None\n */\nconst CellPopUp = ({ text, record, setCancelMeeting}) => {\n  /* Handles the popUp action on the cell table */\n  const [popUp, setPopUp] = useState(false);\n\n  const handleVisiblePopUp = (visible) => {\n    setPopUp(popUp ? false : true);\n  };\n  return (\n    <Popover\n      content={<PopButtons \n        text={text} \n        record={record} \n        setPopUp={setPopUp} \n        setCancelMeeting={setCancelMeeting}\n        />}\n      style={{ borderRadius: 20 }}\n      trigger=\"click\"\n      visible={popUp}\n      onVisibleChange={handleVisiblePopUp}\n    >\n      <a id=\"cellPop\">\n        <div>{text}</div>\n      </a>\n    </Popover>\n  );\n};\n\nexport default CellPopUp;\n","/home/omsebas/techstars_heroku/client/src/Parts/buttonsOfPopUp.jsx",[],"/home/omsebas/techstars_heroku/client/src/components/LoadTable.jsx",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":38,"column":13,"nodeType":"112","endLine":42,"endColumn":4},{"ruleId":"110","severity":1,"message":"113","line":39,"column":6,"nodeType":"114","endLine":39,"endColumn":15,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":13},{"ruleId":"116","severity":1,"message":"120","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":20},{"ruleId":"116","severity":1,"message":"121","line":39,"column":10,"nodeType":"118","messageId":"119","endLine":39,"endColumn":21},{"ruleId":"116","severity":1,"message":"122","line":39,"column":23,"nodeType":"118","messageId":"119","endLine":39,"endColumn":37},{"ruleId":"110","severity":1,"message":"111","line":60,"column":13,"nodeType":"112","endLine":81,"endColumn":4},{"ruleId":"110","severity":1,"message":"123","line":81,"column":5,"nodeType":"114","endLine":81,"endColumn":7,"suggestions":"124"},{"ruleId":"110","severity":1,"message":"111","line":110,"column":13,"nodeType":"112","endLine":118,"endColumn":4},{"ruleId":"110","severity":1,"message":"125","line":118,"column":6,"nodeType":"114","endLine":118,"endColumn":21,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":324,"column":7,"nodeType":"129","messageId":"130","endLine":324,"endColumn":16},{"ruleId":"116","severity":1,"message":"131","line":492,"column":9,"nodeType":"118","messageId":"119","endLine":492,"endColumn":24},{"ruleId":"116","severity":1,"message":"132","line":2,"column":19,"nodeType":"118","messageId":"119","endLine":2,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":33,"column":7,"nodeType":"135","endLine":33,"endColumn":23},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'history' and 'setView'. Either include them or remove the dependency array. If 'setView' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["138"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'updateTable' is assigned a value but never used.","'SetUpdateTable' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataFilterAM', 'dataFilterPM', and 'resSchedule'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDataFilterAM' needs the current value of 'resSchedule'.",["139"],"React Hook useEffect has a missing dependency: 'dataFilterAM'. Either include it or remove the dependency array.",["140"],"no-dupe-keys","Duplicate key 'sortOrder'.","ObjectExpression","unexpected","'handleClickCell' is assigned a value but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [fetched, history, setView]",{"range":"147","text":"148"},"Update the dependencies array to be: [dataFilterAM, dataFilterPM, resSchedule]",{"range":"149","text":"150"},"Update the dependencies array to be: [cancelMeeting, dataFilterAM]",{"range":"151","text":"152"},[1480,1489],"[fetched, history, setView]",[2757,2759],"[dataFilterAM, dataFilterPM, resSchedule]",[3925,3940],"[cancelMeeting, dataFilterAM]"]