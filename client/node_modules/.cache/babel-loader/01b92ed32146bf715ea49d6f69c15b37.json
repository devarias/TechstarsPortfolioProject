{"ast":null,"code":"var _jsxFileName = \"/home/devarias/TechstarsPortfolioProject/client/src/components/ModalBox.jsx\";\nimport React from 'react';\nimport { Modal } from 'antd';\nimport { FireFilled } from \"@ant-design/icons\";\nimport '../styles/ModalBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ModalBox(props) {\n  const handleOk = () => {\n    props.setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalVisible(false);\n  };\n\n  let mentorVote = 4;\n  let companyVote = 4;\n  let mentorRanking = 0;\n  let companyRanking = 0;\n  let mentorFeedback = 'None';\n  let companyFeedback = 'None';\n  const info = props.modalContent;\n  const surveyVotes = [\"Won't\", \"is Willing\", \"Wants\", \"Wants\", \"is pending\"];\n  const surveyClass = [\"wont\", \"willing\", \"want\", \"want\", \"pending\"];\n  const codeColor = ['pending', 'notMatch', 'willing', 'goodMatch', 'strongMatch', 'perfectMatch'];\n\n  if (info.mentorVote) {\n    mentorVote = info.mentorVote;\n    mentorRanking = info.mentorRanking;\n    mentorFeedback = info.mentorFeedback;\n  }\n\n  if (info.companyVote) {\n    companyVote = info.companyVote;\n    companyRanking = info.companyRanking;\n    companyFeedback = info.companyFeedback;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Result Summary\",\n      visible: props.isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      cancelButtonProps: {\n        style: {\n          display: 'none'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalBox\",\n        children: [/*#__PURE__*/_jsxDEV(FireFilled, {\n          className: `${info.matchResult !== 6 ? codeColor[info.matchResult ? info.matchResult + 1 : 0] : codeColor[5]} modalFireball`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: props.mentorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 14\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: surveyClass[mentorVote],\n            children: surveyVotes[mentorVote]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 40\n          }, this), \" to lead \", info.company, \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 138\n          }, this), \"The score of how prepared is \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: codeColor[mentorRanking],\n            children: mentorRanking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 40\n          }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 106\n          }, this), \"The feedback is:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: mentorFeedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: info.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 14\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: surveyClass[companyVote],\n            children: surveyVotes[companyVote]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 36\n          }, this), \" to be mentored by \", props.mentorName, \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 150\n          }, this), \"The score of helpfulness is \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: codeColor[companyRanking],\n            children: companyRanking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 39\n          }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 107\n          }, this), \"The feedback is:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: companyFeedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = ModalBox;\n;\nexport default ModalBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBox\");","map":{"version":3,"sources":["/home/devarias/TechstarsPortfolioProject/client/src/components/ModalBox.jsx"],"names":["React","Modal","FireFilled","ModalBox","props","handleOk","setIsModalVisible","handleCancel","mentorVote","companyVote","mentorRanking","companyRanking","mentorFeedback","companyFeedback","info","modalContent","surveyVotes","surveyClass","codeColor","isModalVisible","style","display","matchResult","mentorName","company"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal } from 'antd';\nimport { FireFilled } from \"@ant-design/icons\";\nimport '../styles/ModalBox.css';\n\nfunction ModalBox(props) {\n\n\n  const handleOk = () => {\n    props.setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalVisible(false);\n  };\n\n  let mentorVote = 4;\n  let companyVote = 4;\n  let mentorRanking = 0;\n  let companyRanking = 0;\n  let mentorFeedback = 'None';\n  let companyFeedback = 'None';\n  const info = props.modalContent;\n  const surveyVotes = [\"Won't\", \"is Willing\", \"Wants\", \"Wants\", \"is pending\"];\n  const surveyClass = [\"wont\", \"willing\", \"want\", \"want\", \"pending\"];\n  const codeColor = ['pending','notMatch', 'willing', 'goodMatch', 'strongMatch', 'perfectMatch'];\n\n  if (info.mentorVote){\n    mentorVote = info.mentorVote;\n    mentorRanking = info.mentorRanking;\n    mentorFeedback = info.mentorFeedback\n  }\n  if (info.companyVote) {\n    companyVote = info.companyVote;\n    companyRanking = info.companyRanking\n    companyFeedback = info.companyFeedback\n  }\n\n  return (\n    <>\n      <Modal title=\"Result Summary\" visible={props.isModalVisible} onOk={handleOk} onCancel={handleCancel} cancelButtonProps={{ style: { display: 'none' } }}>\n        <div className='modalBox'>\n          <FireFilled className={`${info.matchResult !== 6 ? codeColor[info.matchResult ? info.matchResult + 1 : 0] : codeColor[5]} modalFireball`}/>\n          <p><b>{props.mentorName}</b> <span className={surveyClass[mentorVote]}>{surveyVotes[mentorVote]}</span> to lead {info.company}.<br/>\n          The score of how prepared is <span className={codeColor[mentorRanking]}>{mentorRanking}</span>.<br/>\n          The feedback is:<br/><span>{mentorFeedback}</span></p>\n          <p><b>{info.company}</b> <span className={surveyClass[companyVote]}>{surveyVotes[companyVote]}</span> to be mentored by {props.mentorName}.<br/>\n          The score of helpfulness is <span className={codeColor[companyRanking]}>{companyRanking}</span>.<br/>\n          The feedback is:<br/><span>{companyFeedback}</span></p>\n        </div>\n      </Modal>\n    </>\n  );\n};\nexport default ModalBox;\n"]},"metadata":{},"sourceType":"module"}