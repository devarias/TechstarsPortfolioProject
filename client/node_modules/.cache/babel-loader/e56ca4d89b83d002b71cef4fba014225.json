{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_heroku/client/src/Parts/buttonSelection.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SelectionButton = ({\n  view,\n  record,\n  setRechargeReschedule,\n  setView\n}) => {\n  _s();\n\n  const [fetched, setFetched] = useRef(false);\n  useEffect(() => {\n    setRechargeReschedule(true);\n    setView(0);\n    setFetched(false);\n    return () => {};\n  }, [fetched]);\n\n  const cancelMeeting = target => {\n    console.log(record);\n    fetch(\"http://localhost:3033/api/reschedule\"\n    /* Route to send the CSV file to \n       generate the schedule */\n    , {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(record)\n    }).then(response => response.json()).then(result => {\n      alert(result.message);\n      setFetched(true);\n    }).catch(error => {\n      console.log(\"Error:\", error);\n    });\n  };\n\n  const buttonMessage = ['Reschedule', 'Schedule'];\n  let message = buttonMessage[view];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: cancelMeeting,\n      style: {\n        borderRadius: 5\n      },\n      children: \"Program meetings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SelectionButton, \"nACk3igyseaPBvMW7hFrTPGkYZQ=\");\n\n_c = SelectionButton;\nexport default SelectionButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectionButton\");","map":{"version":3,"sources":["/home/omsebas/techstars_heroku/client/src/Parts/buttonSelection.jsx"],"names":["React","Button","SelectionButton","view","record","setRechargeReschedule","setView","fetched","setFetched","useRef","useEffect","cancelMeeting","target","console","log","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","result","alert","message","catch","error","buttonMessage","borderRadius"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,qBAAhB;AAAuCC,EAAAA;AAAvC,CAAD,KAAsD;AAAA;;AAE5E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,MAAM,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdL,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAC,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,WAAO,MAAM,CAAE,CAAf;AACD,GALQ,EAKN,CAACD,OAAD,CALM,CAAT;;AAMA,QAAMI,aAAa,GAAIC,MAAD,IAAY;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACAW,IAAAA,KAAK,CACC;AAAuC;AACjD;AAFS,MAGC;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFX;AAMEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,MAAf;AANR,KAHD,CAAL,CAYOkB,IAZP,CAYaC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAZ1B,EAaOF,IAbP,CAaaG,MAAD,IAAY;AACdC,MAAAA,KAAK,CAACD,MAAM,CAACE,OAAR,CAAL;AACAnB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAhBP,EAiBOoB,KAjBP,CAiBcC,KAAD,IAAW;AAChBhB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBe,KAAtB;AACD,KAnBP;AAsBD,GAxBD;;AAyBA,QAAMC,aAAa,GAAG,CAAC,YAAD,EAAe,UAAf,CAAtB;AACA,MAAIH,OAAO,GAAGG,aAAa,CAAC3B,IAAD,CAA3B;AACA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEQ,aAAhC;AAA+C,MAAA,KAAK,EAAE;AAACoB,QAAAA,YAAY,EAAE;AAAf,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CA5CD;;GAAM7B,e;;KAAAA,e;AA8CN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\n\nconst SelectionButton = ({ view, record, setRechargeReschedule, setView }) => {\n\n  const [fetched, setFetched] = useRef(false);\n\n  useEffect(() => {\n    setRechargeReschedule(true);\n    setView(0);\n    setFetched(false);\n    return () => {}\n  }, [fetched]);\n  const cancelMeeting = (target) => {\n    console.log(record);\n    fetch(\n          \"http://localhost:3033/api/reschedule\" /* Route to send the CSV file to \n                                                    generate the schedule */,\n          {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            body: JSON.stringify(record),\n          }\n        )\n          .then((response) => response.json())\n          .then((result) => {\n              alert(result.message);\n              setFetched(true);\n          })\n          .catch((error) => {\n            console.log(\"Error:\", error);\n          });\n    \n\n  };\n  const buttonMessage = ['Reschedule', 'Schedule'];\n  let message = buttonMessage[view];\n  return (\n    <>\n      <Button type=\"primary\" onClick={cancelMeeting} style={{borderRadius: 5}}>\n        Program meetings\n      </Button>\n    </>\n  );\n};\n\nexport default SelectionButton;"]},"metadata":{},"sourceType":"module"}