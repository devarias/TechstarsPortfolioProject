{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_heroku/client/src/Parts/formDeleteMentors.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Select, Space } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DeleteMentor = ({\n  mentors,\n  setReloadMentors\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const cancelMentor = value => {\n    form.resetFields();\n    let bodyData = JSON.stringify({\n      \"mentor\": value.mentor\n    });\n    fetch(\"http://localhost:3033/api/mentors\"\n    /* Route to send the CSV file to \n          generate the schedule */\n    , {\n      method: \"Delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: bodyData\n    }).then(response => response.json()).then(result => {\n      alert('Mentor Deleted');\n      setReloadMentors(true);\n    }).catch(error => {\n      alert(\"Error:\", error);\n    });\n  };\n\n  const listMentors = mentors.map(row => /*#__PURE__*/_jsxDEV(Select.Option, {\n    value: row.mentor,\n    children: row.mentor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 45\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Delete Mentor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      name: \"Delete Mentor\",\n      labelCol: {\n        span: 7\n      },\n      wrapperCol: {\n        span: 14\n      },\n      layout: \"Horizontal\",\n      initialValues: {\n        size: 'small'\n      },\n      onFinish: cancelMentor,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"mentor\",\n        label: \"Select Mentor\",\n        rules: [{\n          required: true,\n          message: 'Please input a mentor!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          children: listMentors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          paddingLeft: 143\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DeleteMentor, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = DeleteMentor;\nexport default DeleteMentor;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteMentor\");","map":{"version":3,"sources":["/home/omsebas/techstars_heroku/client/src/Parts/formDeleteMentors.jsx"],"names":["React","useState","Form","Button","Select","Space","DeleteMentor","mentors","setReloadMentors","form","useForm","cancelMentor","value","resetFields","bodyData","JSON","stringify","mentor","fetch","method","headers","Accept","body","then","response","json","result","alert","catch","error","listMentors","map","row","span","size","required","message","paddingLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,IADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,KAJF,QAKO,MALP;;;;AAQA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAiC;AAAA;;AACpD,QAAM,CAACC,IAAD,IAASP,IAAI,CAACQ,OAAL,EAAf;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BH,IAAAA,IAAI,CAACI,WAAL;AACA,QAAIC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,gBAAUJ,KAAK,CAACK;AAAjB,KAAf,CAAf;AACAC,IAAAA,KAAK,CACC;AAAoC;AAC9C;AAFS,MAGC;AACEC,MAAAA,MAAM,EAAE,QADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFX;AAMEC,MAAAA,IAAI,EAAER;AANR,KAHD,CAAL,CAYOS,IAZP,CAYaC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAZ1B,EAaOF,IAbP,CAaaG,MAAD,IAAY;AACdC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACAnB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,KAhBP,EAiBOoB,KAjBP,CAiBcC,KAAD,IAAW;AAChBF,MAAAA,KAAK,CAAC,QAAD,EAAWE,KAAX,CAAL;AACD,KAnBP;AAoBD,GAvBD;;AAwBA,QAAMC,WAAW,GAAGvB,OAAO,CAACwB,GAAR,CAAaC,GAAD,iBAAU,QAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAEA,GAAG,CAACf,MAA1B;AAAA,cAAmCe,GAAG,CAACf;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAtB,CAApB;AACA,sBACE;AAAA,4BACG,QAAC,KAAD;AAAA,6BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,YADH,eAEE,QAAC,IAAD;AACE,MAAA,IAAI,EAAGR,IADT;AAEE,MAAA,IAAI,EAAC,eAFP;AAGE,MAAA,QAAQ,EAAE;AACRwB,QAAAA,IAAI,EAAE;AADE,OAHZ;AAME,MAAA,UAAU,EAAE;AACVA,QAAAA,IAAI,EAAE;AADI,OANd;AASE,MAAA,MAAM,EAAC,YATT;AAUE,MAAA,aAAa,EAAE;AACbC,QAAAA,IAAI,EAAE;AADO,OAVjB;AAaE,MAAA,QAAQ,EAAEvB,YAbZ;AAAA,8BAeE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC,QAAhB;AAAyB,QAAA,KAAK,EAAC,eAA/B;AAA+C,QAAA,KAAK,EAAE,CACpD;AACEwB,UAAAA,QAAQ,EAAE,IADZ;AAEEC,UAAAA,OAAO,EAAE;AAFX,SADoD,CAAtD;AAAA,+BAME,QAAC,MAAD;AAAA,oBACGN;AADH;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAfF,eAyBE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAACO,UAAAA,WAAW,EAAE;AAAd,SAAlB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAoCD,CA/DD;;GAAM/B,Y;UACWJ,IAAI,CAACQ,O;;;KADhBJ,Y;AAkEN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Form,\n  Button,\n  Select,\n  Space,\n} from 'antd';\n\n\nconst DeleteMentor = ({mentors, setReloadMentors}) => {\n  const [form] = Form.useForm();\n  const cancelMentor = (value) => {\n    form.resetFields();\n    let bodyData = JSON.stringify({\"mentor\": value.mentor});\n    fetch(\n          \"http://localhost:3033/api/mentors\" /* Route to send the CSV file to \n                                                    generate the schedule */,\n          {\n            method: \"Delete\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            body: bodyData,\n          }\n        )\n          .then((response) => response.json())\n          .then((result) => {\n              alert('Mentor Deleted');\n              setReloadMentors(true);\n          })\n          .catch((error) => {\n            alert(\"Error:\", error);\n          });\n  };\n  const listMentors = mentors.map((row) => (<Select.Option value={row.mentor}>{row.mentor}</Select.Option>));\n  return (\n    <>\n       <Space><h1>Delete Mentor</h1></Space>\n      <Form\n        form ={form}\n        name='Delete Mentor'\n        labelCol={{\n          span: 7,\n        }}\n        wrapperCol={{\n          span: 14,\n        }}\n        layout=\"Horizontal\"\n        initialValues={{\n          size: 'small',\n        }}\n        onFinish={cancelMentor}\n      >\n        <Form.Item name='mentor' label=\"Select Mentor\" rules={[\n          {\n            required: true,\n            message: 'Please input a mentor!',\n          },\n        ]}>\n          <Select>\n            {listMentors}  \n          </Select>\n        </Form.Item>\n        <Form.Item style={{paddingLeft: 143}}>\n          <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\n\nexport default DeleteMentor;"]},"metadata":{},"sourceType":"module"}