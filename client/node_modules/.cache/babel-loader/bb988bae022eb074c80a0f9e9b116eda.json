{"ast":null,"code":"var _jsxFileName = \"/home/devarias/TechstarsPortfolioProject/client/src/components/LoadTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useStateWithPromise } from \"react\";\nimport ColorCode from \"./ColorCode\";\nimport TableResults from \"./TableResults\";\nimport Spinner from \"./Spinner\";\nimport \"../styles/LoadTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoadTable() {\n  _s();\n\n  const [todoCompanies, setTodoCompanies] = useState('');\n  const [displayTable, setDisplayTable] = useState(false);\n  const [dataResults, setDataResults] = useState('');\n\n  const getCompanies = async () => {\n    const response = await fetch(`https://techstars-api.herokuapp.com/api/companies`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    return response.json();\n  };\n\n  const getResults = async () => {\n    const resultsResponse = await fetch('http://techstars-api.herokuapp.com/api/results', {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    return resultsResponse.json();\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      let result = await getResults();\n      setDataResults(result);\n      result = await getCompanies();\n      setTodoCompanies(result);\n      setDisplayTable(true);\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ColorCode, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), displayTable ? /*#__PURE__*/_jsxDEV(TableResults, {\n      company: todoCompanies,\n      results: dataResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoadTable, \"KoisOfp0jOlIvfXY5DZED99K9uw=\");\n\n_c = LoadTable;\nexport default LoadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadTable\");","map":{"version":3,"sources":["/home/devarias/TechstarsPortfolioProject/client/src/components/LoadTable.jsx"],"names":["React","useState","useEffect","useStateWithPromise","ColorCode","TableResults","Spinner","LoadTable","todoCompanies","setTodoCompanies","displayTable","setDisplayTable","dataResults","setDataResults","getCompanies","response","fetch","method","headers","Accept","json","getResults","resultsResponse","fetchData","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,mBAArC,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,yBAAP;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEnB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMa,YAAY,GAAG,YAAY;AAC/B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,mDADyB,EAE1B;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAFX,KAF0B,CAA5B;AAUA,WAAOJ,QAAQ,CAACK,IAAT,EAAP;AACD,GAZD;;AAcA,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,eAAe,GAAG,MAAMN,KAAK,CACjC,gDADiC,EAEjC;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAFX,KAFiC,CAAnC;AAUA,WAAOG,eAAe,CAACF,IAAhB,EAAP;AACD,GAZD;;AAcAlB,EAAAA,SAAS,CAAC,MAAM;AAAC,mBAAeqB,SAAf,GAA2B;AAC1C,UAAIC,MAAM,GAAG,MAAMH,UAAU,EAA7B;AACAR,MAAAA,cAAc,CAACW,MAAD,CAAd;AACAA,MAAAA,MAAM,GAAG,MAAMV,YAAY,EAA3B;AACAL,MAAAA,gBAAgB,CAACe,MAAD,CAAhB;AACAb,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;;AACDY,IAAAA,SAAS;AAAG,GAPH,EAOK,EAPL,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGb,YAAY,gBACX,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEF,aAAvB;AAAsC,MAAA,OAAO,EAAEI;AAA/C;AAAA;AAAA;AAAA;AAAA,YADW,gBAET,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAJN;AAAA,kBADF;AAQD;;GAnDQL,S;;KAAAA,S;AAoDT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useStateWithPromise} from \"react\";\nimport ColorCode from \"./ColorCode\";\nimport TableResults from \"./TableResults\";\nimport Spinner from \"./Spinner\";\nimport \"../styles/LoadTable.css\";\n\nfunction LoadTable() {\n\n  const [todoCompanies, setTodoCompanies] = useState('');\n  const [displayTable, setDisplayTable] = useState(false);\n  const [dataResults, setDataResults] = useState('');\n\n  const getCompanies = async () => {\n    const response = await fetch(\n      `https://techstars-api.herokuapp.com/api/companies`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      }\n    );\n    return response.json();\n  };\n\n  const getResults = async () => {\n    const resultsResponse = await fetch(\n      'http://techstars-api.herokuapp.com/api/results',\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      }\n    );\n    return resultsResponse.json();\n  }\n\n  useEffect(() => {async function fetchData() {\n    let result = await getResults();\n    setDataResults(result);\n    result = await getCompanies();\n    setTodoCompanies(result);\n    setDisplayTable(true);\n  }\n  fetchData()}, []);\n\n  return (\n    <>\n      <ColorCode />\n      {displayTable ? (\n        <TableResults company={todoCompanies} results={dataResults} />\n      ) : <Spinner/>}\n    </>\n  );\n}\nexport default LoadTable;\n"]},"metadata":{},"sourceType":"module"}