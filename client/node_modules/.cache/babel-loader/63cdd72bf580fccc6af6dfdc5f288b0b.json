{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_heroku/client/src/Parts/buttonsOfPopUp.jsx\";\nimport React from \"react\";\nimport { Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopButtons = ({\n  text,\n  record,\n  setPopUp,\n  setCancelMeeting\n}) => {\n  const cancelMeeting = () => {\n    const makeObject = () => {\n      const objToSend = [{\n        mentor: \"\",\n        Companies: []\n      }];\n\n      for (let k in record) {\n        if (k === \"Mentor\") {\n          objToSend[0].mentor = record[k];\n        } else if (k !== \"Day\" && k !== \"Block\" && record[k] !== null) {\n          objToSend[0].Companies.push(obj[k]);\n        }\n      }\n\n      return objToSend;\n    };\n\n    const bodyData = makeObject();\n    console.log(bodyData);\n    setPopUp(false);\n    fetch(\"http://localhost:3033/api/meetings\"\n    /* Route to send the CSV file to \n             generate the schedule */\n    , {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify([{\n        mentor: record.Mentor,\n        Companies: [text]\n      }])\n    }).then(response => response.json()).then(result => {\n      alert(result.message);\n    }).catch(error => {\n      console.log(\"Error:\", error);\n    });\n    setCancelMeeting(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: cancelMeeting,\n      children: \"Cancel Meeting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PopButtons;\nexport default PopButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopButtons\");","map":{"version":3,"sources":["/home/omsebas/techstars_heroku/client/src/Parts/buttonsOfPopUp.jsx"],"names":["React","Button","PopButtons","text","record","setPopUp","setCancelMeeting","cancelMeeting","makeObject","objToSend","mentor","Companies","k","push","obj","bodyData","console","log","fetch","method","headers","Accept","body","JSON","stringify","Mentor","then","response","json","result","alert","message","catch","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA;AAA1B,CAAD,KAAkD;AACnE,QAAMC,aAAa,GAAG,MAAM;AAC1B,UAAMC,UAAU,GAAG,MAAM;AACvB,YAAMC,SAAS,GAAG,CAAC;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,SAAS,EAAE;AAAzB,OAAD,CAAlB;;AACA,WAAK,IAAIC,CAAT,IAAcR,MAAd,EAAsB;AACpB,YAAIQ,CAAC,KAAK,QAAV,EAAoB;AAClBH,UAAAA,SAAS,CAAC,CAAD,CAAT,CAAaC,MAAb,GAAsBN,MAAM,CAACQ,CAAD,CAA5B;AACD,SAFD,MAEO,IAAIA,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,OAArB,IAAgCR,MAAM,CAACQ,CAAD,CAAN,KAAc,IAAlD,EAAwD;AAC7DH,UAAAA,SAAS,CAAC,CAAD,CAAT,CAAaE,SAAb,CAAuBE,IAAvB,CAA4BC,GAAG,CAACF,CAAD,CAA/B;AACD;AACF;;AACD,aAAOH,SAAP;AACD,KAVD;;AAWA,UAAMM,QAAQ,GAAGP,UAAU,EAA3B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAV,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAa,IAAAA,KAAK,CACH;AAAqC;AAC3C;AAFS,MAGH;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFX;AAMEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,CAAC;AAAEd,QAAAA,MAAM,EAAEN,MAAM,CAACqB,MAAjB;AAAyBd,QAAAA,SAAS,EAAE,CAACR,IAAD;AAApC,OAAD,CAAf;AANR,KAHG,CAAL,CAYGuB,IAZH,CAYSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAZtB,EAaGF,IAbH,CAaSG,MAAD,IAAY;AAChBC,MAAAA,KAAK,CAACD,MAAM,CAACE,OAAR,CAAL;AACD,KAfH,EAgBGC,KAhBH,CAgBUC,KAAD,IAAW;AAChBjB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBgB,KAAtB;AACD,KAlBH;AAmBA3B,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAnCD;;AAqCA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAEC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjDD;;KAAML,U;AAmDN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\n\nconst PopButtons = ({ text, record, setPopUp, setCancelMeeting }) => {\n  const cancelMeeting = () => {\n    const makeObject = () => {\n      const objToSend = [{ mentor: \"\", Companies: [] }];\n      for (let k in record) {\n        if (k === \"Mentor\") {\n          objToSend[0].mentor = record[k];\n        } else if (k !== \"Day\" && k !== \"Block\" && record[k] !== null) {\n          objToSend[0].Companies.push(obj[k]);\n        }\n      }\n      return objToSend;\n    };\n    const bodyData = makeObject();\n    console.log(bodyData);\n    setPopUp(false);\n    fetch(\n      \"http://localhost:3033/api/meetings\" /* Route to send the CSV file to \n                                                    generate the schedule */,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify([{ mentor: record.Mentor, Companies: [text] }]),\n      }\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        alert(result.message);\n      })\n      .catch((error) => {\n        console.log(\"Error:\", error);\n      });\n    setCancelMeeting(true);\n  };\n\n  return (\n    <div>\n      <Button type=\"link\" onClick={cancelMeeting}>\n        Cancel Meeting\n      </Button>\n      {/* <br />\n      <Button type=\"link\" onClick={cancelMeeting}>\n        Posible Reschedulings\n      </Button> */}\n    </div>\n  );\n};\n\nexport default PopButtons;\n"]},"metadata":{},"sourceType":"module"}