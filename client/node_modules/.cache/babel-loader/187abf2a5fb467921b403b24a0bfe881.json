{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_heroku/client/src/Parts/buttonsOfPopUp.jsx\";\nimport React from \"react\";\nimport { Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopButtons = ({\n  text,\n  record\n}) => {\n  const cancelMeeting = e => {\n    fetch(\"http://localhost:3033/api/meetings\"\n    /* Route to send the CSV file to \n         generate the schedule */\n    , {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        mentor: record.Mentor,\n        \"Companies\": [text]\n      })\n    }).then(response => response.json()).then(result => {\n      /*result is the generated schedule without conflicts*/\n      setResSchedule(result);\n      setIsReset(true);\n      /* with this we call the use effect to redirect to other component and clean \n        the actual component */\n\n      setFetched(true);\n    }).catch(error => {\n      setIsReset(true);\n      setJsonData(null);\n      console.error(\"Error:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: cancelMeeting,\n      value: text,\n      children: \"Cancel Meeting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: cancelMeeting,\n      children: \"Posible Reschedulings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PopButtons;\nexport default PopButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopButtons\");","map":{"version":3,"sources":["/home/omsebas/techstars_heroku/client/src/Parts/buttonsOfPopUp.jsx"],"names":["React","Button","PopButtons","text","record","cancelMeeting","e","fetch","method","headers","Accept","body","JSON","stringify","mentor","Mentor","then","response","json","result","setResSchedule","setIsReset","setFetched","catch","error","setJsonData","console"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AACvC,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3BC,IAAAA,KAAK,CACC;AAAqC;AAC/C;AAFS,MAGC;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFX;AAMEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,MAAM,EAAEV,MAAM,CAACW,MAAhB;AAAwB,qBAAa,CAACZ,IAAD;AAArC,OAAf;AANR,KAHD,CAAL,CAYOa,IAZP,CAYaC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAZ1B,EAaOF,IAbP,CAaaG,MAAD,IAAY;AAChB;AACAC,MAAAA,cAAc,CAACD,MAAD,CAAd;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;AACZ;;AACYC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KApBP,EAqBOC,KArBP,CAqBcC,KAAD,IAAW;AAChBH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,MAAAA,OAAO,CAACF,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD,KAzBP;AA2BD,GA5BD;;AA8BA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAEnB,aAA7B;AAA4C,MAAA,KAAK,EAAEF,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAEE,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA1CD;;KAAMH,U;AA4CN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\n\nconst PopButtons = ({ text, record }) => {\n  const cancelMeeting = (e) => {\n    fetch(\n          \"http://localhost:3033/api/meetings\" /* Route to send the CSV file to \n                                                    generate the schedule */,\n          {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            body: JSON.stringify({mentor: record.Mentor, \"Companies\": [text]}),\n          }\n        )\n          .then((response) => response.json())\n          .then((result) => {\n            /*result is the generated schedule without conflicts*/\n            setResSchedule(result);\n            setIsReset(true);\n            /* with this we call the use effect to redirect to other component and clean \n              the actual component */\n            setFetched(true);\n          })\n          .catch((error) => {\n            setIsReset(true);\n            setJsonData(null);\n            console.error(\"Error:\", error);\n          });\n\n  };\n\n  return (\n    <div>\n      <Button type=\"link\" onClick={cancelMeeting} value={text}>\n        Cancel Meeting\n      </Button>\n      <br />\n      <Button type=\"link\" onClick={cancelMeeting}>\n        Posible Reschedulings\n      </Button>\n    </div>\n  );\n};\n\nexport default PopButtons;\n"]},"metadata":{},"sourceType":"module"}