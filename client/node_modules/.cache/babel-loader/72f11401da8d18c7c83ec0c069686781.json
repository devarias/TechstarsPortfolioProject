{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_heroku/client/src/components/TableResults.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Table } from 'antd';\nimport { FireFilled } from \"@ant-design/icons\";\nimport ModalBox from './ModalBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TableResults(props) {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const handleModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const columns = props.company.map(obj => {\n    return {\n      title: obj.company,\n      dataIndex: 'companyName',\n      key: 'companyName',\n      width: 80,\n      filters: [{\n        text: /*#__PURE__*/_jsxDEV(FireFilled, {\n          className: \"perfectMatch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 23\n        }, this),\n        value: 'Perfect'\n      }, {\n        text: /*#__PURE__*/_jsxDEV(FireFilled, {\n          className: \"strongMatch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 23\n        }, this),\n        value: 'Strong'\n      }, {\n        text: /*#__PURE__*/_jsxDEV(FireFilled, {\n          className: \"goodMatch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 23\n        }, this),\n        value: 'Good'\n      }, {\n        text: /*#__PURE__*/_jsxDEV(FireFilled, {\n          className: \"willing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 23\n        }, this),\n        value: 'Willing'\n      }, {\n        text: /*#__PURE__*/_jsxDEV(FireFilled, {\n          className: \"notMatch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 23\n        }, this),\n        value: 'NoMatch'\n      }, {\n        text: /*#__PURE__*/_jsxDEV(FireFilled, {\n          className: \"pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }, this),\n        value: 'Pending'\n      }],\n      onFilter: (value, record) => record.name.indexOf(value) === 0\n    };\n  });\n  columns.unshift({\n    title: 'Mentor / Company',\n    dataIndex: 'mentorName',\n    key: 'mentorName',\n    fixed: 'left',\n    width: 80,\n    render: text => /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: handleModal,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }, this)\n  });\n  const data = props.mentors.map((obj, index) => {\n    return {\n      key: index,\n      mentorName: obj.mentor,\n      companyName: 'SoftLake Co'\n    };\n  });\n  console.log(isModalVisible);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalBox, {\n      isModalVisible: isModalVisible,\n      setIsModalVisible: setIsModalVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data,\n      size: \"default\",\n      pagination: false,\n      expandable: true,\n      scroll: {\n        x: 'calc(700px + 50%)',\n        y: 240\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TableResults, \"ZFwHEtl1ZQoNaflbPbQvGOHlSaM=\");\n\n_c = TableResults;\n;\nexport default TableResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableResults\");","map":{"version":3,"sources":["/home/omsebas/techstars_heroku/client/src/components/TableResults.jsx"],"names":["React","useState","Table","FireFilled","ModalBox","TableResults","props","isModalVisible","setIsModalVisible","handleModal","columns","company","map","obj","title","dataIndex","key","width","filters","text","value","onFilter","record","name","indexOf","unshift","fixed","render","data","mentors","index","mentorName","mentor","companyName","console","log","x","y"],"mappings":"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","sourcesContent":["import React, { useState }from 'react';\nimport { Table } from 'antd';\nimport { FireFilled } from \"@ant-design/icons\";\nimport ModalBox from './ModalBox';\n\nfunction TableResults(props) {\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const handleModal = () => {\n        setIsModalVisible(true);\n    };\n  \n    const columns =  props.company.map(obj => {\n        return {\n            title: obj.company,\n            dataIndex: 'companyName',\n            key: 'companyName',\n            width: 80,\n            filters: [\n              {\n                text: <FireFilled className='perfectMatch'/>,\n                value: 'Perfect',\n              },\n              {\n                text: <FireFilled className='strongMatch'/>,\n                value: 'Strong',\n              },\n              {\n                text: <FireFilled className='goodMatch'/>,\n                value: 'Good',\n              },\n              {\n                text: <FireFilled className='willing'/>,\n                value: 'Willing',\n              },\n              {\n                text: <FireFilled className='notMatch'/>,\n                value: 'NoMatch',\n              },\n              {\n                text: <FireFilled className='pending'/>,\n                value: 'Pending',\n              },\n            ],\n            onFilter: (value, record) => record.name.indexOf(value) === 0,\n        }\n    })\n\n    columns.unshift(\n        {\n            title: 'Mentor / Company',\n            dataIndex: 'mentorName',\n            key: 'mentorName',\n            fixed: 'left',\n            width: 80,\n            render: text => <span onClick={handleModal}>{text}</span>  \n        }\n    )\n\n    const data = props.mentors.map((obj, index) => {\n        return {\n            key: index,\n            mentorName: obj.mentor,\n            companyName: 'SoftLake Co',\n        }\n    })\n\n    console.log(isModalVisible);\n    return (\n    <>\n    <ModalBox isModalVisible={isModalVisible} setIsModalVisible={setIsModalVisible}/>\n    <Table\n        columns={columns}\n        dataSource={data}\n        size='default'\n        pagination={false}\n        expandable\n        scroll={{ x: 'calc(700px + 50%)', y: 240 }}\n    />\n    </>\n    )\n\n};\nexport default TableResults;"]},"metadata":{},"sourceType":"module"}