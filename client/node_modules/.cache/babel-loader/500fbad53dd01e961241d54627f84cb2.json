{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_heroku/client/src/Parts/buttonReschedule.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RescheduleButton = ({\n  view,\n  record,\n  setPossibleMeetings,\n  setView\n}) => {\n  _s();\n\n  const [fetched, setFetched] = useState(false);\n  useEffect(() => {\n    if (fetched === true) {\n      setView(1);\n      return () => {};\n    }\n  }, [fetched]);\n\n  const cancelMeeting = () => {\n    fetch(\"http://localhost:3033/api/reschedule\"\n    /* Route to send the CSV file to \n       generate the schedule */\n    , {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify([record])\n    }).then(response => response.json()).then(result => {\n      setPossibleMeetings(result);\n      setFetched(true);\n    }).catch(error => {\n      console.log(\"Error:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: cancelMeeting,\n      style: {\n        borderRadius: 5\n      },\n      children: \"Reschedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RescheduleButton, \"SZxsEExGuI30by3CPb/S9hQMNBA=\");\n\n_c = RescheduleButton;\nexport default RescheduleButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"RescheduleButton\");","map":{"version":3,"sources":["/home/omsebas/techstars_heroku/client/src/Parts/buttonReschedule.jsx"],"names":["React","useEffect","useState","Button","RescheduleButton","view","record","setPossibleMeetings","setView","fetched","setFetched","cancelMeeting","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","result","catch","error","console","log","borderRadius"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,MAAvB;;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,mBAAhB;AAAqCC,EAAAA;AAArC,CAAD,KAAoD;AAAA;;AAE3E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,OAAO,KAAK,IAAhB,EAAsB;AACtBD,MAAAA,OAAO,CAAC,CAAD,CAAP;AACA,aAAO,MAAM,CAAE,CAAf;AACC;AACF,GALQ,EAKN,CAACC,OAAD,CALM,CAAT;;AAOA,QAAME,aAAa,GAAG,MAAM;AAC1BC,IAAAA,KAAK,CACC;AAAuC;AACjD;AAFS,MAGC;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFX;AAMEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,CAACZ,MAAD,CAAf;AANR,KAHD,CAAL,CAYOa,IAZP,CAYaC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAZ1B,EAaOF,IAbP,CAaaG,MAAD,IAAY;AAChBf,MAAAA,mBAAmB,CAACe,MAAD,CAAnB;AACAZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAhBP,EAiBOa,KAjBP,CAiBcC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACD,KAnBP;AAoBD,GArBD;;AAsBA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEb,aAAhC;AAA+C,MAAA,KAAK,EAAE;AAACgB,QAAAA,YAAY,EAAE;AAAf,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CAxCD;;GAAMvB,gB;;KAAAA,gB;AA0CN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\n\nconst RescheduleButton = ({ view, record, setPossibleMeetings, setView }) => {\n\n  const [fetched, setFetched] = useState(false);\n\n  useEffect(() => {\n    if (fetched === true) {\n    setView(1);\n    return () => {};\n    }\n  }, [fetched]);\n\n  const cancelMeeting = () => {\n    fetch(\n          \"http://localhost:3033/api/reschedule\" /* Route to send the CSV file to \n                                                    generate the schedule */,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            body: JSON.stringify([record]),\n          }\n        )\n          .then((response) => response.json())\n          .then((result) => {\n            setPossibleMeetings(result);\n            setFetched(true);\n          })\n          .catch((error) => {\n            console.log(\"Error:\", error);\n          });\n  };\n  return (\n    <>\n      <Button type=\"primary\" onClick={cancelMeeting} style={{borderRadius: 5}}>\n        Reschedule\n      </Button>\n    </>\n  );\n};\n\nexport default RescheduleButton;"]},"metadata":{},"sourceType":"module"}