{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_app_results/client/src/components/UploadFile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CSVReader } from \"react-papaparse\";\nimport { Button } from \"antd\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport \"../styles/UploadFile.css\";\n/**\n * UploadFile si the component to upload the CSV to generate the schedule\n * @setReschedule: this setter sends the response schedule data from the back-end to\n * be used to\n * build the datatable.\n * @setView: is used to redirect automatically from the generate meeting section to\n * the meeting table view\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UploadFile = ({\n  setResSchedule,\n  setView\n}) => {\n  _s();\n\n  /* isReset manages the unmounting process for the uploaded CSV file*/\n  const [isReset, setIsReset] = useState(false);\n  /* jsonData stores the data of the uploaded CSV */\n\n  const [jsonData, setJsonData] = useState(null);\n  /* fetched is used to know when the the generation of the schedule is done to redirect\n   * the user to the scheduling table */\n\n  const [fetched, setFetched] = useState(false);\n  const [loading, setLoading] = useState(0);\n  const message = [\"Drop CSV file here or click to upload\", \"Generating schedule.\\nPlease wait to be redirected\"];\n  const history = useHistory();\n  /* This effect redirects from this component to the table schedule view and cleans \n  this component*/\n\n  useEffect(() => {\n    if (fetched === true) {\n      history.push(\"/MeetingsTable\");\n      setView(4);\n    }\n\n    return () => {}, [fetched];\n  });\n  /* This funtions handles the actions when a CSV file is uploaded */\n\n  const handleOnDrop = data => {\n    const data_list = data.map(row => row.data);\n    setJsonData(JSON.stringify(data_list));\n  };\n  /* This function handles Error with the uploaded file */\n\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    alert(err);\n    setIsReset(true);\n    setJsonData(null);\n    alert(\"Error: %s\", reason);\n  };\n  /* Removes the file from the front-end to allow the upload of another file \n  or when an error ocurred */\n\n\n  const handleOnRemoveFile = data => {\n    setIsReset(true);\n    setJsonData(null);\n  };\n  /* Handles the querying to the back-end to generate the shedule*/\n\n\n  const handleSubmit = () => {\n    if (jsonData !== null) {\n      if (window.confirm(\"A new meeting schedule is going to be generated\\nand the actual schedule will be erased\\nDo you want to continue?\")) {\n        setIsReset(true);\n        setLoading(1);\n        fetch(\"http://localhost:3033/api/schedule\"\n        /* Route to send the CSV file to \n             generate the schedule */\n        , {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          },\n          body: jsonData\n        }).then(response => response.json()).then(result => {\n          /*result is the generated schedule without conflicts*/\n          setResSchedule(result);\n          setIsReset(true);\n          /* with this we call the use effect to redirect to other component and clean \n            the actual component */\n\n          setFetched(true);\n        }).catch(error => {\n          setIsReset(true);\n          setJsonData(null);\n          console.error(\"Error:\", error);\n        });\n      } else {\n        setIsReset(true);\n      }\n    }\n  };\n\n  const handleSubmitButton = () => {\n    if (jsonData !== null) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        id: \"buttonUpload\",\n        type: \"primary\",\n        shape: \"round\",\n        icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this),\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CSVReader, {\n      accept: \"text/csv, .csv, application/vnd.ms-excel\",\n      progressBarColor: \"#39C463\",\n      onDrop: handleOnDrop,\n      onError: handleOnError,\n      s: true,\n      addRemoveButton: true,\n      isReset: isReset,\n      onRemoveFile: handleOnRemoveFile,\n      config: {\n        header: true\n      },\n      style: {\n        dropArea: {\n          borderColor: \"pink\",\n          height: 200,\n          width: 250,\n          borderRadius: 20\n        },\n        dropAreaActive: {\n          borderColor: \"red\"\n        },\n        dropFile: {\n          width: 100,\n          height: 100,\n          background: \"#ccc\"\n        },\n        fileSizeInfo: {\n          color: \"#000\",\n          backgroundColor: \"#fff\",\n          borderRadius: 3,\n          lineHeight: 1,\n          marginBottom: \"0.5em\",\n          padding: \"0 0.4em\"\n        },\n        fileNameInfo: {\n          color: \"#000\",\n          backgroundColor: \"#fff\",\n          borderRadius: 3,\n          fontSize: 14,\n          lineHeight: 1,\n          padding: \"0 0.4em\"\n        },\n        removeButton: {\n          color: \"#39C463\"\n        },\n        progressBar: {\n          backgroundColor: \"#39C463\"\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: message[loading]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), handleSubmitButton()]\n  }, void 0, true);\n};\n\n_s(UploadFile, \"7aUotkIWCvflFXAcPdF8G+WHles=\", false, function () {\n  return [useHistory];\n});\n\n_c = UploadFile;\nexport default UploadFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"sources":["/home/omsebas/techstars_app_results/client/src/components/UploadFile.jsx"],"names":["React","useEffect","useState","useHistory","CSVReader","Button","SendOutlined","UploadFile","setResSchedule","setView","isReset","setIsReset","jsonData","setJsonData","fetched","setFetched","loading","setLoading","message","history","push","handleOnDrop","data","data_list","map","row","JSON","stringify","handleOnError","err","file","inputElem","reason","alert","handleOnRemoveFile","handleSubmit","window","confirm","fetch","method","headers","Accept","body","then","response","json","result","catch","error","console","handleSubmitButton","header","dropArea","borderColor","height","width","borderRadius","dropAreaActive","dropFile","background","fileSizeInfo","color","backgroundColor","lineHeight","marginBottom","padding","fileNameInfo","fontSize","removeButton","progressBar"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CSVReader } from \"react-papaparse\";\nimport { Button } from \"antd\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport \"../styles/UploadFile.css\";\n\n/**\n * UploadFile si the component to upload the CSV to generate the schedule\n * @setReschedule: this setter sends the response schedule data from the back-end to\n * be used to\n * build the datatable.\n * @setView: is used to redirect automatically from the generate meeting section to\n * the meeting table view\n */\nconst UploadFile = ({ setResSchedule, setView }) => {\n  /* isReset manages the unmounting process for the uploaded CSV file*/\n  const [isReset, setIsReset] = useState(false);\n  /* jsonData stores the data of the uploaded CSV */\n  const [jsonData, setJsonData] = useState(null);\n  /* fetched is used to know when the the generation of the schedule is done to redirect\n   * the user to the scheduling table */\n  const [fetched, setFetched] = useState(false);\n  const [loading, setLoading] = useState(0);\n  const message = [\n    \"Drop CSV file here or click to upload\",\n    \"Generating schedule.\\nPlease wait to be redirected\",\n  ];\n  const history = useHistory();\n\n  /* This effect redirects from this component to the table schedule view and cleans \n  this component*/\n  useEffect(() => {\n    if (fetched === true) {\n      history.push(\"/MeetingsTable\");\n      setView(4);\n    }\n    return () => {}, [fetched];\n  });\n\n  /* This funtions handles the actions when a CSV file is uploaded */\n  const handleOnDrop = (data) => {\n    const data_list = data.map((row) => row.data);\n    setJsonData(JSON.stringify(data_list));\n  };\n\n  /* This function handles Error with the uploaded file */\n  const handleOnError = (err, file, inputElem, reason) => {\n    alert(err);\n    setIsReset(true);\n    setJsonData(null);\n    alert(\"Error: %s\", reason);\n  };\n\n  /* Removes the file from the front-end to allow the upload of another file \n  or when an error ocurred */\n  const handleOnRemoveFile = (data) => {\n    setIsReset(true);\n    setJsonData(null);\n  };\n\n  /* Handles the querying to the back-end to generate the shedule*/\n  const handleSubmit = () => {\n    if (jsonData !== null) {\n      if (\n        window.confirm(\n          \"A new meeting schedule is going to be generated\\nand the actual schedule will be erased\\nDo you want to continue?\"\n        )\n      ) {\n        setIsReset(true);\n        setLoading(1);\n        fetch(\n          \"http://localhost:3033/api/schedule\" /* Route to send the CSV file to \n                                                    generate the schedule */,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            body: jsonData,\n          }\n        )\n          .then((response) => response.json())\n          .then((result) => {\n            /*result is the generated schedule without conflicts*/\n            setResSchedule(result);\n            setIsReset(true);\n            /* with this we call the use effect to redirect to other component and clean \n              the actual component */\n            setFetched(true);\n          })\n          .catch((error) => {\n            setIsReset(true);\n            setJsonData(null);\n            console.error(\"Error:\", error);\n          });\n      } else {\n        setIsReset(true);\n      }\n    }\n  };\n\n  const handleSubmitButton = () => {\n    if (jsonData !== null) {\n      return (\n        <Button\n          id=\"buttonUpload\"\n          type=\"primary\"\n          shape=\"round\"\n          icon={<SendOutlined />}\n          onClick={handleSubmit}\n        >\n          Submit\n        </Button>\n      );\n    }\n  };\n  return (\n    <>\n      <CSVReader\n        accept=\"text/csv, .csv, application/vnd.ms-excel\"\n        progressBarColor=\"#39C463\"\n        onDrop={handleOnDrop}\n        onError={handleOnError}\n        s\n        addRemoveButton\n        isReset={isReset}\n        onRemoveFile={handleOnRemoveFile}\n        config={{ header: true }}\n        style={{\n          dropArea: {\n            borderColor: \"pink\",\n            height: 200,\n            width: 250,\n            borderRadius: 20,\n          },\n          dropAreaActive: {\n            borderColor: \"red\",\n          },\n          dropFile: {\n            width: 100,\n            height: 100,\n            background: \"#ccc\",\n          },\n          fileSizeInfo: {\n            color: \"#000\",\n            backgroundColor: \"#fff\",\n            borderRadius: 3,\n            lineHeight: 1,\n            marginBottom: \"0.5em\",\n            padding: \"0 0.4em\",\n          },\n          fileNameInfo: {\n            color: \"#000\",\n            backgroundColor: \"#fff\",\n            borderRadius: 3,\n            fontSize: 14,\n            lineHeight: 1,\n            padding: \"0 0.4em\",\n          },\n          removeButton: {\n            color: \"#39C463\",\n          },\n          progressBar: {\n            backgroundColor: \"#39C463\",\n          },\n        }}\n      >\n        <span>{message[loading]}</span>\n      </CSVReader>\n      {handleSubmitButton()}\n    </>\n  );\n};\n\nexport default UploadFile;\n"]},"metadata":{},"sourceType":"module"}