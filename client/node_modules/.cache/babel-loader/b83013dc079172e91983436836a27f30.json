{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_heroku/client/src/components/ModalBox.jsx\";\nimport React from 'react';\nimport { Modal } from 'antd';\nimport '../styles/ModalBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ModalBox(props) {\n  const handleOk = () => {\n    props.setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalVisible(false);\n  };\n\n  const info = props.modalContent;\n  const surveyVotes = [\"Won't\", \"is Willing\", \"Want\", \"Want\"];\n  const surveyClass = [\"wont\", \"willing\", \"want\", \"want\"];\n  const codeColor = ['empty', 'notMatch', 'willing', 'goodMatch', 'strongMatch', 'perfectMatch'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Result Summary\",\n      visible: props.isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      cancelButtonProps: {\n        style: {\n          display: 'none'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: props.mentorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 14\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: surveyClass[info.mentorVote],\n            children: surveyVotes[info.mentorVote]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 40\n          }, this), \" to lead \", info.company, \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 148\n          }, this), \"The score of how prepared is \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: codeColor[info.mentorRanking],\n            children: info.mentorRanking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 40\n          }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 116\n          }, this), \"The feedback is:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: info.mentorFeedback ? info.mentorFeedback : 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: info.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 14\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: surveyClass[info.companyVote],\n            children: surveyVotes[info.companyVote]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 36\n          }, this), \" to be mentored by \", props.mentorName, \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 160\n          }, this), \"The score of helpfulness is \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: codeColor[info.companyRanking],\n            children: info.companyRanking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 39\n          }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 117\n          }, this), \"The feedback is:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: info.companyFeedback ? info.companyFeedback : 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = ModalBox;\n;\nexport default ModalBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBox\");","map":{"version":3,"sources":["/home/omsebas/techstars_heroku/client/src/components/ModalBox.jsx"],"names":["React","Modal","ModalBox","props","handleOk","setIsModalVisible","handleCancel","info","modalContent","surveyVotes","surveyClass","codeColor","isModalVisible","style","display","mentorName","mentorVote","company","mentorRanking","mentorFeedback","companyVote","companyRanking","companyFeedback"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal } from 'antd';\nimport '../styles/ModalBox.css';\n\nfunction ModalBox(props) {\n\n\n  const handleOk = () => {\n    props.setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    props.setIsModalVisible(false);\n  };\n\n  const info = props.modalContent;\n  const surveyVotes = [\"Won't\", \"is Willing\", \"Want\", \"Want\"];\n  const surveyClass = [\"wont\", \"willing\", \"want\", \"want\"];\n  const codeColor = ['empty','notMatch', 'willing', 'goodMatch', 'strongMatch', 'perfectMatch'];\n\n  return (\n    <>\n      <Modal title=\"Result Summary\" visible={props.isModalVisible} onOk={handleOk} onCancel={handleCancel} cancelButtonProps={{ style: { display: 'none' } }}>\n        <div className='modalBox'>\n          <p><b>{props.mentorName}</b> <span className={surveyClass[info.mentorVote]}>{surveyVotes[info.mentorVote]}</span> to lead {info.company}.<br/>\n          The score of how prepared is <span className={codeColor[info.mentorRanking]}>{info.mentorRanking}</span>.<br/>\n          The feedback is:<br/><span>{info.mentorFeedback ? info.mentorFeedback : 'None'}</span></p>\n          <p><b>{info.company}</b> <span className={surveyClass[info.companyVote]}>{surveyVotes[info.companyVote]}</span> to be mentored by {props.mentorName}.<br/>\n          The score of helpfulness is <span className={codeColor[info.companyRanking]}>{info.companyRanking}</span>.<br/>\n          The feedback is:<br/><span>{info.companyFeedback ? info.companyFeedback : 'None'}</span></p>\n        </div>\n      </Modal>\n    </>\n  );\n};\nexport default ModalBox;\n"]},"metadata":{},"sourceType":"module"}