{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_heroku/client/src/components/TableReschedule.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Table } from 'antd';\nimport RescheduleButton from '../Parts/buttonReschedule';\nimport SelectionButton from '../Parts/buttonSelection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TableReschedule = ({\n  pendingMeetings,\n  setRechargeReschedule\n}) => {\n  _s();\n\n  const [possibleMeetings, setPossibleMeetings] = useState([]);\n  const [view, setView] = useState(0);\n  const columnsAction = [{\n    title: 'mentor',\n    width: 100,\n    dataIndex: 'mentor',\n    key: 'mentor',\n    fixed: 'left'\n  }, {\n    title: 'Companies',\n    width: 100,\n    dataIndex: 'Companies',\n    key: 'Companies',\n    fixed: 'left',\n\n    render(record) {\n      let text = record.join(', ');\n      return {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      };\n    }\n\n  }, {\n    title: 'Action',\n    key: 'operation',\n    fixed: 'right',\n    width: 100,\n    render: record => /*#__PURE__*/_jsxDEV(RescheduleButton, {\n      record: record,\n      setPossibleMeetings: setPossibleMeetings,\n      setView: setView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }, this)\n  }];\n  const columnsSelection = [{\n    title: 'mentor',\n    width: 100,\n    dataIndex: 'Mentor',\n    key: 'mentor',\n    fixed: 'left'\n  }, {\n    title: 'Day',\n    width: 100,\n    dataIndex: 'Day',\n    key: 'Day',\n    fixed: 'left'\n  }, {\n    title: 'Block',\n    width: 100,\n    dataIndex: 'Block',\n    key: 'Block',\n    fixed: 'left'\n  }, {\n    title: 'Action',\n    key: 'operation',\n    fixed: 'right',\n    width: 100,\n    render: record => /*#__PURE__*/_jsxDEV(SelectionButton, {\n      view: view,\n      record: record,\n      setRechargeReschedule: setRechargeReschedule,\n      setView: setView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }, this)\n  }];\n  const pageView = [/*#__PURE__*/_jsxDEV(Table, {\n    title: () => \"Please select reschedule row to display the options\",\n    size: \"small\",\n    columns: columnsAction,\n    dataSource: pendingMeetings,\n    scroll: {\n      x: \"max-content\"\n    },\n    pagination: {\n      pageSize: 50\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 22\n  }, this), /*#__PURE__*/_jsxDEV(Table, {\n    title: () => \"Please select a day and a time block the click to program the meetings\",\n    size: \"small\",\n    columns: columnsSelection,\n    dataSource: possibleMeetings,\n    scroll: {\n      x: \"max-content\"\n    },\n    pagination: {\n      pageSize: 50\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pageView[view]\n  }, void 0, false);\n};\n\n_s(TableReschedule, \"Kbm42di8yyOx4tI2AZ9eOzJwS4k=\");\n\n_c = TableReschedule;\nexport default TableReschedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableReschedule\");","map":{"version":3,"sources":["/home/omsebas/techstars_heroku/client/src/components/TableReschedule.jsx"],"names":["React","useState","Table","RescheduleButton","SelectionButton","TableReschedule","pendingMeetings","setRechargeReschedule","possibleMeetings","setPossibleMeetings","view","setView","columnsAction","title","width","dataIndex","key","fixed","render","record","text","join","children","columnsSelection","pageView","x","pageSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Table } from 'antd';\nimport RescheduleButton from '../Parts/buttonReschedule'\nimport SelectionButton from '../Parts/buttonSelection'\n\nconst TableReschedule = ({pendingMeetings, setRechargeReschedule}) => {\n\nconst [possibleMeetings, setPossibleMeetings] = useState([]);\nconst [view, setView] = useState(0);\nconst columnsAction = [\n  {\n    title: 'mentor',\n    width: 100,\n    dataIndex: 'mentor',\n    key: 'mentor',\n    fixed: 'left',\n  },\n  {\n    title: 'Companies',\n    width: 100,\n    dataIndex: 'Companies',\n    key: 'Companies',\n    fixed: 'left',\n    render (record) {\n      let text = record.join(', ');\n      return {children: <div>{text}</div>,}\n      },\n  },\n  {\n    title: 'Action',\n    key: 'operation',\n    fixed: 'right',\n    width: 100,\n    render: (record) => <RescheduleButton record={record} setPossibleMeetings={setPossibleMeetings} setView={setView}/> ,\n  },\n];\n\nconst columnsSelection = [\n  {\n    title: 'mentor',\n    width: 100,\n    dataIndex: 'Mentor',\n    key: 'mentor',\n    fixed: 'left',\n  },\n  {\n    title: 'Day',\n    width: 100,\n    dataIndex: 'Day',\n    key: 'Day',\n    fixed: 'left',\n  },\n  {\n    title: 'Block',\n    width: 100,\n    dataIndex: 'Block',\n    key: 'Block',\n    fixed: 'left',\n  },\n  {\n    title: 'Action',\n    key: 'operation',\n    fixed: 'right',\n    width: 100,\n    render: (record) => <SelectionButton view={view} record={record} setRechargeReschedule={setRechargeReschedule} setView={setView}/> ,\n  },\n];\n  const pageView =  [<Table \n  title = {() => \"Please select reschedule row to display the options\"}\n  size = 'small'\n  columns={columnsAction} \n  dataSource={pendingMeetings} \n  scroll={{ x: \"max-content\" }}  \n  pagination={{ pageSize: 50 }} \n  />,\n  <Table \n  title = {() => \"Please select a day and a time block the click to program the meetings\"}\n  size = \"small\"\n  columns={columnsSelection} \n  dataSource={possibleMeetings} \n  scroll={{ x: \"max-content\" }}  \n  pagination={{ pageSize: 50 }} \n  />];\n  return (\n    <>\n    {pageView[view]}\n    </>\n    );\n  }\n\nexport default TableReschedule;\n"]},"metadata":{},"sourceType":"module"}