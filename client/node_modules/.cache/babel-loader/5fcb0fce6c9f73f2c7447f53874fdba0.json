{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_heroku/client/src/components/TableReschedule.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Table } from 'antd';\nimport RescheduleButton from '../Parts/buttonReschedule';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TableReschedule = ({\n  pendingMeetings\n}) => {\n  _s();\n\n  const [possibleMeetings, setPossibleMeetings] = useState([]);\n  const [view, setView] = useState(0);\n  const columnsAction = [{\n    title: 'mentor',\n    width: 100,\n    dataIndex: 'mentor',\n    key: 'mentor',\n    fixed: 'left'\n  }, {\n    title: 'Companies',\n    width: 100,\n    dataIndex: 'Companies',\n    key: 'Companies',\n    fixed: 'left'\n  }, {\n    title: 'Action',\n    key: 'operation',\n    fixed: 'right',\n    width: 100,\n    render: record => /*#__PURE__*/_jsxDEV(RescheduleButton, {\n      record: record,\n      setPossibleMeetings: setPossibleMeetings,\n      setView: setView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this)\n  }];\n  const columnsSelection = [{\n    title: 'mentor',\n    width: 100,\n    dataIndex: 'Mentor',\n    key: 'mentor',\n    fixed: 'left'\n  }, {\n    title: 'Day',\n    width: 100,\n    dataIndex: 'Day',\n    key: 'Day',\n    fixed: 'left'\n  }, {\n    title: 'Block',\n    width: 100,\n    dataIndex: 'Block',\n    key: 'Block',\n    fixed: 'left'\n  }, {\n    title: 'Action',\n    key: 'operation',\n    fixed: 'right',\n    width: 100,\n    render: record => /*#__PURE__*/_jsxDEV(RescheduleButton, {\n      record: record,\n      setPossibleMeetings: setPossibleMeetings,\n      setView: setView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }, this)\n  }];\n  const pageView = [/*#__PURE__*/_jsxDEV(Table, {\n    columns: columnsAction,\n    dataSource: pendingMeetings,\n    scroll: {\n      x: \"max-content\"\n    },\n    pagination: {\n      pageSize: 50\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 22\n  }, this), /*#__PURE__*/_jsxDEV(Table, {\n    columns: columnsSelection,\n    dataSource: possibleMeetings,\n    scroll: {\n      x: \"max-content\"\n    },\n    pagination: {\n      pageSize: 50\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pageView[view]\n  }, void 0, false);\n};\n\n_s(TableReschedule, \"Kbm42di8yyOx4tI2AZ9eOzJwS4k=\");\n\n_c = TableReschedule;\nexport default TableReschedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableReschedule\");","map":{"version":3,"sources":["/home/omsebas/techstars_heroku/client/src/components/TableReschedule.jsx"],"names":["React","useState","Table","RescheduleButton","TableReschedule","pendingMeetings","possibleMeetings","setPossibleMeetings","view","setView","columnsAction","title","width","dataIndex","key","fixed","render","record","columnsSelection","pageView","x","pageSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Table } from 'antd';\nimport RescheduleButton from '../Parts/buttonReschedule'\n\nconst TableReschedule = ({pendingMeetings}) => {\n\nconst [possibleMeetings, setPossibleMeetings] = useState([]);\nconst [view, setView] = useState(0);\nconst columnsAction = [\n  {\n    title: 'mentor',\n    width: 100,\n    dataIndex: 'mentor',\n    key: 'mentor',\n    fixed: 'left',\n  },\n  {\n    title: 'Companies',\n    width: 100,\n    dataIndex: 'Companies',\n    key: 'Companies',\n    fixed: 'left',\n  },\n  {\n    title: 'Action',\n    key: 'operation',\n    fixed: 'right',\n    width: 100,\n    render: (record) => <RescheduleButton record={record} setPossibleMeetings={setPossibleMeetings} setView={setView}/> ,\n  },\n];\n\nconst columnsSelection = [\n  {\n    title: 'mentor',\n    width: 100,\n    dataIndex: 'Mentor',\n    key: 'mentor',\n    fixed: 'left',\n  },\n  {\n    title: 'Day',\n    width: 100,\n    dataIndex: 'Day',\n    key: 'Day',\n    fixed: 'left',\n  },\n  {\n    title: 'Block',\n    width: 100,\n    dataIndex: 'Block',\n    key: 'Block',\n    fixed: 'left',\n  },\n  {\n    title: 'Action',\n    key: 'operation',\n    fixed: 'right',\n    width: 100,\n    render: (record) => <RescheduleButton record={record} setPossibleMeetings={setPossibleMeetings} setView={setView}/> ,\n  },\n];\n  const pageView =  [<Table \n  columns={columnsAction} \n  dataSource={pendingMeetings} \n  scroll={{ x: \"max-content\" }}  \n  pagination={{ pageSize: 50 }} \n  />,\n  <Table \n  columns={columnsSelection} \n  dataSource={possibleMeetings} \n  scroll={{ x: \"max-content\" }}  \n  pagination={{ pageSize: 50 }} \n  />];\n  return (\n    <>\n    {pageView[view]}\n    </>\n    );\n  }\n\nexport default TableReschedule;\n"]},"metadata":{},"sourceType":"module"}