{"ast":null,"code":"var _jsxFileName = \"/home/devarias/TechstarsPortfolioProject/client/src/components/Page.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Layout } from \"antd\";\nimport TableSchedule from \"./TableSchedule\";\nimport { Row, Col } from \"antd\";\nimport CSVReader2 from \"./UploadFile\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navsider from \"./Navsider\";\nimport TableReschedule from \"./TableReschedule\";\nimport SurveyStatus from \"./ModifySurvey\";\nimport \"../styles/Page.css\";\nimport LoadTable from \"./LoadTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content,\n  Sider\n} = Layout;\n\nconst Page = () => {\n  _s();\n\n  const [view, setView] = useState(0);\n  const [collapsed, setCollapse] = useState(false);\n  const [resSchedule, setResSchedule] = useState([]);\n  const [viewSelect, setViewSelect] = useState([\"0\"]);\n  /* state to control the view of the table, it assures that all the content necessary is caught */\n\n  const [tableDisplay, setTableDisplay] = useState(null);\n  /* companies variable returned from the back-end */\n\n  const [companies, setCompanies] = useState([]);\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:3033/api/companies\", {\n      method: \"GET\",\n      headers: {\n        \"content-Type\": \"application/json\",\n        Accept: \"aplication/json\"\n      }\n    });\n    return response.json();\n  };\n\n  useEffect(async () => {\n    let result = await getData();\n    setCompanies(result);\n    setTableDisplay(true);\n  }, []);\n  const classObjects = [\"home\", \"surveyStatus\", \"results\", \"charts\", \"table\"];\n  const pathRoute = [\"/Home\", \"/SurveyStatus\", \"/Results\", \"/GenerateMeetings\", \"/MeetingsTable\"];\n\n  const onCollapse = collapsed => setCollapse(collapsed);\n\n  const viewObjects = [\"home\", /*#__PURE__*/_jsxDEV(SurveyStatus, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(LoadTable, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(CSVReader2, {\n    setResSchedule: setResSchedule,\n    setView: setView,\n    setViewSelect: setViewSelect\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TableSchedule, {\n    resSchedule: resSchedule,\n    companies: companies,\n    tableDisplay: tableDisplay\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TableReschedule, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/survey/:id\",\n        component: Survey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        style: {\n          minHeight: \"100vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Sider, {\n          collapsible: true,\n          collapsed: collapsed,\n          onCollapse: onCollapse,\n          children: /*#__PURE__*/_jsxDEV(Navsider, {\n            setView: setView,\n            viewselect: viewSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Layout, {\n          className: \"site-layout\",\n          children: /*#__PURE__*/_jsxDEV(Content, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"content\",\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                children: /*#__PURE__*/_jsxDEV(Route, {\n                  path: pathRoute[view],\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    span: 24,\n                    className: classObjects[view],\n                    children: viewObjects[view]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Page, \"v2sZor47RYzPVeZKH03T1ByYvdg=\");\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/home/devarias/TechstarsPortfolioProject/client/src/components/Page.jsx"],"names":["React","useState","useEffect","Layout","TableSchedule","Row","Col","CSVReader2","BrowserRouter","Router","Switch","Route","Navsider","TableReschedule","SurveyStatus","LoadTable","Content","Sider","Page","view","setView","collapsed","setCollapse","resSchedule","setResSchedule","viewSelect","setViewSelect","tableDisplay","setTableDisplay","companies","setCompanies","getData","response","fetch","method","headers","Accept","json","result","classObjects","pathRoute","onCollapse","viewObjects","Survey","minHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Layout } from \"antd\";\nimport TableSchedule from \"./TableSchedule\";\nimport { Row, Col } from \"antd\";\nimport CSVReader2 from \"./UploadFile\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navsider from \"./Navsider\";\nimport TableReschedule from \"./TableReschedule\";\nimport SurveyStatus from \"./ModifySurvey\";\nimport \"../styles/Page.css\";\nimport LoadTable from \"./LoadTable\";\n\nconst { Content, Sider } = Layout;\n\nconst Page = () => {\n  const [view, setView] = useState(0);\n  const [collapsed, setCollapse] = useState(false);\n  const [resSchedule, setResSchedule] = useState([]);\n  const [viewSelect, setViewSelect] = useState([\"0\"]);\n  /* state to control the view of the table, it assures that all the content necessary is caught */\n  const [tableDisplay, setTableDisplay] = useState(null);\n  /* companies variable returned from the back-end */\n  const [companies, setCompanies] = useState([]);\n\n  const getData = async () => {\n    const response = await fetch(\"http://localhost:3033/api/companies\", {\n      method: \"GET\",\n      headers: {\n        \"content-Type\": \"application/json\",\n        Accept: \"aplication/json\",\n      },\n    });\n    return response.json();\n  };\n\n  useEffect(async () => {\n    let result = await getData();\n    setCompanies(result);\n    setTableDisplay(true);\n  }, []);\n\n  const classObjects = [\"home\", \"surveyStatus\", \"results\", \"charts\", \"table\"];\n  const pathRoute = [\n    \"/Home\",\n    \"/SurveyStatus\",\n    \"/Results\",\n    \"/GenerateMeetings\",\n    \"/MeetingsTable\",\n  ];\n  const onCollapse = (collapsed) => setCollapse(collapsed);\n  const viewObjects = [\n    \"home\",\n    <SurveyStatus />,\n    <LoadTable />,\n    <CSVReader2\n      setResSchedule={setResSchedule}\n      setView={setView}\n      setViewSelect={setViewSelect}\n    />,\n    <TableSchedule\n      resSchedule={resSchedule}\n      companies={companies}\n      tableDisplay={tableDisplay}\n    />,\n    <TableReschedule />,\n  ];\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/survey/:id\" component={Survey} />\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n            <Navsider setView={setView} viewselect={viewSelect} />\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Content>\n              <Row className=\"content\">\n                <Switch>\n                  <Route path={pathRoute[view]}>\n                    <Col span={24} className={classObjects[view]}>\n                      {viewObjects[view]}\n                    </Col>\n                  </Route>\n                </Switch>\n              </Row>\n            </Content>\n          </Layout>\n        </Layout>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}