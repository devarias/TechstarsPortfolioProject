{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianorozco/techstars_app/client/src/components/tableSchedule.jsx\";\nimport { Table, Button, Space } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\n\nclass tableSchedule extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filteredInfo: null,\n      sortedInfo: null\n    };\n\n    this.handleChange = (pagination, filters, sorter) => {\n      console.log('Various parameters', pagination, filters, sorter);\n      this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    };\n\n    this.clearFilters = () => {\n      this.setState({\n        filteredInfo: null\n      });\n    };\n\n    this.clearAll = () => {\n      this.setState({\n        filteredInfo: null,\n        sortedInfo: null\n      });\n    };\n\n    this.setAgeSort = () => {\n      this.setState({\n        sortedInfo: {\n          order: 'descend',\n          columnKey: 'age'\n        }\n      });\n    };\n  }\n\n  render() {\n    let {\n      sortedInfo,\n      filteredInfo\n    } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      filters: [{\n        text: 'Joe',\n        value: 'Joe'\n      }, {\n        text: 'Jim',\n        value: 'Jim'\n      }],\n      filteredValue: filteredInfo.name || null,\n      onFilter: (value, record) => record.name.includes(value),\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n      ellipsis: true\n    }, {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      sorter: (a, b) => a.age - b.age,\n      sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\n      ellipsis: true\n    }, {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      filters: [{\n        text: 'London',\n        value: 'London'\n      }, {\n        text: 'New York',\n        value: 'New York'\n      }],\n      filteredValue: filteredInfo.address || null,\n      onFilter: (value, record) => record.address.includes(value),\n      sorter: (a, b) => a.address.length - b.address.length,\n      sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\n      ellipsis: true\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Space, {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.setAgeSort,\n          children: \"Sort age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.clearFilters,\n          children: \"Clear filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.clearAll,\n          children: \"Clear filters and sorters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: data,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default tableSchedule;","map":{"version":3,"sources":["/Users/sebastianorozco/techstars_app/client/src/components/tableSchedule.jsx"],"names":["Table","Button","Space","data","key","name","age","address","tableSchedule","React","Component","state","filteredInfo","sortedInfo","handleChange","pagination","filters","sorter","console","log","setState","clearFilters","clearAll","setAgeSort","order","columnKey","render","columns","title","dataIndex","text","value","filteredValue","onFilter","record","includes","a","b","length","sortOrder","ellipsis","marginBottom"],"mappings":"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","sourcesContent":["import { Table, Button, Space } from 'antd';\n\nconst data = [\n    {\n      key: '1',\n      name: 'John Brown',\n      age: 32,\n      address: 'New York No. 1 Lake Park',\n    },\n    {\n      key: '2',\n      name: 'Jim Green',\n      age: 42,\n      address: 'London No. 1 Lake Park',\n    },\n    {\n      key: '3',\n      name: 'Joe Black',\n      age: 32,\n      address: 'Sidney No. 1 Lake Park',\n    },\n    {\n      key: '4',\n      name: 'Jim Red',\n      age: 32,\n      address: 'London No. 2 Lake Park',\n    },\n  ];\n\nclass tableSchedule extends React.Component {\n  state = {\n    filteredInfo: null,\n    sortedInfo: null,\n  };\n\n  handleChange = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  };\n\n  clearFilters = () => {\n    this.setState({ filteredInfo: null });\n  };\n\n  clearAll = () => {\n    this.setState({\n      filteredInfo: null,\n      sortedInfo: null,\n    });\n  };\n\n  setAgeSort = () => {\n    this.setState({\n      sortedInfo: {\n        order: 'descend',\n        columnKey: 'age',\n      },\n    });\n  };\n\n  render() {\n    let { sortedInfo, filteredInfo } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        filters: [\n          { text: 'Joe', value: 'Joe' },\n          { text: 'Jim', value: 'Jim' },\n        ],\n        filteredValue: filteredInfo.name || null,\n        onFilter: (value, record) => record.name.includes(value),\n        sorter: (a, b) => a.name.length - b.name.length,\n        sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n        ellipsis: true,\n      },\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        sorter: (a, b) => a.age - b.age,\n        sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\n        ellipsis: true,\n      },\n      {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n        filters: [\n          { text: 'London', value: 'London' },\n          { text: 'New York', value: 'New York' },\n        ],\n        filteredValue: filteredInfo.address || null,\n        onFilter: (value, record) => record.address.includes(value),\n        sorter: (a, b) => a.address.length - b.address.length,\n        sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\n        ellipsis: true,\n      },\n    ];\n    return (\n      <>\n        <Space style={{ marginBottom: 16 }}>\n          <Button onClick={this.setAgeSort}>Sort age</Button>\n          <Button onClick={this.clearFilters}>Clear filters</Button>\n          <Button onClick={this.clearAll}>Clear filters and sorters</Button>\n        </Space>\n        <Table columns={columns} dataSource={data} onChange={this.handleChange} />\n      </>\n    );\n  }\n}\n\nexport default tableSchedule;"]},"metadata":{},"sourceType":"module"}