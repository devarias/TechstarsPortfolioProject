{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_heroku/client/src/components/TableSchedule.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, Space, Select } from \"antd\";\nimport { CSVDownloader, jsonToCSV } from \"react-papaparse\";\nimport CellPopUp from \"../Parts/CellPopOver\";\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst colors = [\"#483D8B\", \"#8FBC8F\", \"#E9967A\", \"#8B0000\", \"#9932CC\", \"#FF8C00\", \"#4B0082\", \"#008000\", \"#808080\", \"#c9db00\", \"#008080\"];\n/**\n * TableSchedule is the component to generate the data table for the schedule.\n * @resSchedule: is the information retrieved form the back-end to generate the scheduling table \n * the request is done on the UploadFile.jsx\n */\n\nconst TableSchedule = ({\n  resSchedule,\n  companies,\n  tableDisplay,\n  setResSchedule\n}) => {\n  _s();\n\n  /* Block handles the state of the column tables to be rendered */\n  const [block, setBlock] = useState(\"AM\");\n  /* FilteredInfo handles the mentors and days to be filtered */\n\n  const [filteredInfo, setFilteredInfo] = useState({});\n  /* SortedInfo handles the information for sorting the mentor column */\n\n  const [sortedInfo, setSortedInfo] = useState({});\n  /*State that detects when a  meeting is cancelled */\n\n  const [cancelMeeting, setCancelMeeting] = useState(false);\n\n  const getData = async path => {\n    const response = await fetch(`http://localhost:3033/api/${path}`, {\n      method: 'GET',\n      headers: {\n        'content-Type': 'application/json',\n        Accept: 'aplication/json'\n      }\n    });\n    return response.json();\n  };\n\n  useEffect(async () => {\n    if (cancelMeeting === true) {\n      let result = await axios('http://localhost:3033/api/table');\n      setResSchedule(result);\n      setCancelMeeting(false);\n    }\n  }, [cancelMeeting]);\n  const AM = [{\n    title: \"Mentor\",\n    dataIndex: \"Mentor\",\n    key: \"Mentor\",\n    filters: mentor_am.sort(function (a, b) {\n      let nameA = a.text.toUpperCase(); // ignore upper and lowercase\n\n      let nameB = b.text.toUpperCase(); // ignore upper and lowercase\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      } // names must be equal\n\n\n      return 0;\n    }),\n    sorter: (a, b) => {\n      let nameA = a.Mentor.toUpperCase(); // ignore upper and lowercase\n\n      let nameB = b.Mentor.toUpperCase(); // ignore upper and lowercase\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      } // names must be equal\n\n\n      return 0;\n    },\n    sortOrder: sortedInfo.columnKey === \"Mentor\" && sortedInfo.order,\n    filteredValue: (filteredInfo === null || filteredInfo === void 0 ? void 0 : filteredInfo.Mentor) || null,\n    onFilter: (value, record) => record.Mentor.indexOf(value) === 0,\n    width: 150,\n    background: \"#FFFFFF\",\n    fixed: \"left\",\n    align: \"left\"\n  }, {\n    title: \"Day\",\n    dataIndex: \"Day\",\n    key: \"Day\",\n    filters: days_filter,\n    filteredValue: (filteredInfo === null || filteredInfo === void 0 ? void 0 : filteredInfo.Day) || null,\n    onFilter: (value, record) => record.Day.indexOf(value) === 0,\n    width: 100,\n    fixed: \"left\",\n    align: \"left\"\n  }, {\n    title: \"08:00\",\n    dataIndex: \"08:00:00\",\n    key: \"08:00:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"08:20\",\n    dataIndex: \"08:20:00\",\n    key: \"08:20:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"08:40\",\n    dataIndex: \"08:40:00\",\n    key: \"08:40:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"09:00\",\n    dataIndex: \"09:00:00\",\n    key: \"09:00:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"09:20\",\n    dataIndex: \"09:20:00\",\n    key: \"09:20:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"09:40\",\n    dataIndex: \"09:40:00\",\n    key: \"09:40:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"10:00\",\n    dataIndex: \"10:00:00\",\n    key: \"10:00:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"10:20\",\n    dataIndex: \"10:20:00\",\n    key: \"10:20\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"10:40\",\n    dataIndex: \"10:40:00\",\n    key: \"10:40:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"11:00\",\n    dataIndex: \"11:00:00\",\n    key: \"11:00:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"11:20\",\n    dataIndex: \"11:20:00\",\n    key: \"11:20:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"11:40\",\n    dataIndex: \"11:40:00\",\n    key: \"11:40:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }];\n  /* Description of the Columns for the PM block table */\n\n  const PM = [{\n    title: \"Mentor\",\n    dataIndex: \"Mentor\",\n    key: \"Mentor\",\n    filters: mentor_pm.sort(function (a, b) {\n      var nameA = a.text.toUpperCase(); // ignore upper and lowercase\n\n      var nameB = b.text.toUpperCase(); // ignore upper and lowercase\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      } // names must be equal\n\n\n      return 0;\n    }),\n    sorter: (a, b) => {\n      let nameA = a.Mentor.toUpperCase(); // ignore upper and lowercase\n\n      let nameB = b.Mentor.toUpperCase(); // ignore upper and lowercase\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      } // names must be equal\n\n\n      return 0;\n    },\n    sortOrder: sortedInfo.columnKey === \"Mentor\" && sortedInfo.order,\n    filteredValue: (filteredInfo === null || filteredInfo === void 0 ? void 0 : filteredInfo.Mentor) || null,\n    onFilter: (value, record) => record.Mentor.indexOf(value) === 0,\n    sortOrder: sortedInfo.columnKey === \"Mentor\" && sortedInfo.order,\n    width: 150,\n    fixed: \"left\",\n    align: \"left\"\n  }, {\n    title: \"Day\",\n    dataIndex: \"Day\",\n    key: \"Day\",\n    filters: days_filter,\n    filteredValue: (filteredInfo === null || filteredInfo === void 0 ? void 0 : filteredInfo.Day) || null,\n    onFilter: (value, record) => record.Day.indexOf(value) === 0,\n    width: 100,\n    fixed: \"left\",\n    align: \"left\"\n  }, {\n    title: \"13:00\",\n    dataIndex: \"13:10:00\",\n    key: \"13:10:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"13:20\",\n    dataIndex: \"13:30:00\",\n    key: \"13:30:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"13:40\",\n    dataIndex: \"13:50:00\",\n    key: \"13:50:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"14:00\",\n    dataIndex: \"14:10:00\",\n    key: \"14:00:10\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"14:20\",\n    dataIndex: \"14:30:00\",\n    key: \"14:30:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"14:40\",\n    dataIndex: \"14:50:00\",\n    key: \"14:50:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"15:00\",\n    dataIndex: \"15:10:00\",\n    key: \"15:10:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"15:20\",\n    dataIndex: \"15:30:00\",\n    key: \"15:30:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"15:40\",\n    dataIndex: \"15:50:00\",\n    key: \"15:50:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"16:00\",\n    dataIndex: \"16:10:00\",\n    key: \"16:10:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"16:20\",\n    dataIndex: \"16:30:00\",\n    key: \"16:30:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }, {\n    title: \"16:40\",\n    dataIndex: \"16:50:00\",\n    key: \"16:50:00\",\n\n    render(text, record) {\n      return cell_color(text, record);\n    },\n\n    align: \"center\",\n    width: 130\n  }];\n  /* This function is in charge to color format every cell on the schedule table according to the company */\n\n  function cell_color(text, record) {\n    if (text !== null) {\n      var _color$;\n\n      let color = list_comp_colors.filter(obj => {\n        return obj.company === text;\n      });\n      let col_row;\n      col_row = color ? (_color$ = color[0]) === null || _color$ === void 0 ? void 0 : _color$.color : \"#FFFFFF\";\n      return {\n        props: {\n          style: {\n            backgroundColor: col_row,\n            borderRadius: \"10px\",\n            bordered: \"10px\"\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(CellPopUp, {\n          text: text,\n          record: record,\n          setCancelMeeting: setCancelMeeting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 19\n        }, this)\n      };\n    } else {\n      return {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 26\n        }, this)\n      };\n    }\n  }\n  /* Handle the change on the filter and sorters components */\n\n\n  const handleChange = (pagination, filters, sorter) => {\n    // console.log(\"Various parameters\", pagination, filters, sorter);\n    setFilteredInfo(filters);\n    setSortedInfo(sorter);\n  };\n  /* Handles the clear for the filters */\n\n\n  const clearFilters = () => {\n    setFilteredInfo(null);\n  };\n  /* handles the display of the AM and PM tables */\n\n\n  const handleBlock = value => {\n    setBlock(value);\n  };\n\n  let dataFilterAM = resSchedule.filter(row => row.Block === \"AM\");\n  let dataFilterPM = resSchedule.filter(row => row.Block === \"PM\");\n  /* Wrangling the recieved data to generate the list to filter the mentors and the days*/\n\n  const mentor_am_filter = resSchedule.filter(obj => {\n    return obj.Block === \"AM\";\n  });\n  const mentor_am = mentor_am_filter.map(obj => {\n    return {\n      text: obj.Mentor,\n      value: obj.Mentor\n    };\n  });\n  const mentor_pm_filter = resSchedule.filter(obj => {\n    return obj.Block === \"PM\";\n  });\n  const mentor_pm = mentor_pm_filter.map(obj => {\n    return {\n      text: obj.Mentor,\n      value: obj.Mentor\n    };\n  });\n  const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n  const days_filter = days.map(day => {\n    return {\n      text: day,\n      value: day\n    };\n  });\n  const list_comp = companies.map(obj => {\n    return obj.company;\n  });\n  const list_comp_colors = list_comp.map((comp, index) => {\n    let col = colors[index];\n    return {\n      company: comp,\n      color: col\n    };\n  });\n  /* Generate the download file */\n\n  /*  \n  const dataFilterAMPop = dataFilterAM.map((obj) => {\n  delete obj[\"Slots\"];\n  return obj;\n  });\n  const dataFilterPMPop = dataFilterPM.map((obj) => {\n  delete obj[\"Slots\"];\n  return obj;\n  }); */\n\n  let download = jsonToCSV(JSON.stringify(resSchedule));\n  /* +\n  \"\\n\\n\\n\\n\" +\n  jsonToCSV(JSON.stringify(dataFilterPMPop)); */\n\n  /* render the button download if the data is available */\n\n  const renderDownload = () => {\n    if (resSchedule.length > 0) {\n      return /*#__PURE__*/_jsxDEV(CSVDownloader, {\n        className: \"downloadBtn\",\n        data: download,\n        type: \"button\",\n        filename: \"schedule\",\n        style: {\n          color: \"#fff\",\n          backgroundColor: \"#39C463\",\n          borderRadius: \"5px\",\n          height: 32,\n          borderColor: \"#39C463\",\n          width: 110,\n          disable: true\n        },\n        bom: true,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      style: {\n        marginBottom: 16,\n        marginLeft: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select Block:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: \"AM\",\n        style: {\n          width: 110\n        },\n        onChange: handleBlock,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"AM\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"PM\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clearFilters,\n        children: \"Clear filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), renderDownload()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), tableDisplay ? /*#__PURE__*/_jsxDEV(Table, {\n      className: \"ant-table-layout-fixed\",\n      style: {\n        marginBottom: 5\n      },\n      bordered: true,\n      pagination: {\n        pageSize: 50\n      },\n      scroll: {\n        x: \"max-content\"\n      },\n      size: \"small\",\n      columns: block === \"AM\" ? AM : PM,\n      sticky: true,\n      dataSource: block === \"AM\" ? dataFilterAM : dataFilterPM,\n      onChange: handleChange,\n      rowKey: record => record.uid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 23\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(TableSchedule, \"93v6mVCi0SvZKy5UCKhl02Hyqz8=\");\n\n_c = TableSchedule;\nexport default TableSchedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableSchedule\");","map":{"version":3,"sources":["/home/omsebas/techstars_heroku/client/src/components/TableSchedule.jsx"],"names":["React","useEffect","useState","axios","Table","Button","Space","Select","CSVDownloader","jsonToCSV","CellPopUp","withRouter","Option","colors","TableSchedule","resSchedule","companies","tableDisplay","setResSchedule","block","setBlock","filteredInfo","setFilteredInfo","sortedInfo","setSortedInfo","cancelMeeting","setCancelMeeting","getData","path","response","fetch","method","headers","Accept","json","result","AM","title","dataIndex","key","filters","mentor_am","sort","a","b","nameA","text","toUpperCase","nameB","sorter","Mentor","sortOrder","columnKey","order","filteredValue","onFilter","value","record","indexOf","width","background","fixed","align","days_filter","Day","render","cell_color","PM","mentor_pm","color","list_comp_colors","filter","obj","company","col_row","props","style","backgroundColor","borderRadius","bordered","children","handleChange","pagination","clearFilters","handleBlock","dataFilterAM","row","Block","dataFilterPM","mentor_am_filter","map","mentor_pm_filter","days","day","list_comp","comp","index","col","download","JSON","stringify","renderDownload","length","height","borderColor","disable","marginBottom","marginLeft","pageSize","x","uid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, Space, Select } from \"antd\";\nimport { CSVDownloader, jsonToCSV } from \"react-papaparse\";\nimport CellPopUp from \"../Parts/CellPopOver\";\nimport { withRouter } from \"react-router\";\nconst { Option } = Select;\n\nconst colors = [\n  \"#483D8B\",\n  \"#8FBC8F\",\n  \"#E9967A\",\n  \"#8B0000\",\n  \"#9932CC\",\n  \"#FF8C00\",\n  \"#4B0082\",\n  \"#008000\",\n  \"#808080\",\n  \"#c9db00\",\n  \"#008080\",\n];\n\n/**\n * TableSchedule is the component to generate the data table for the schedule.\n * @resSchedule: is the information retrieved form the back-end to generate the scheduling table \n * the request is done on the UploadFile.jsx\n */\nconst TableSchedule = ({resSchedule, companies, tableDisplay , setResSchedule}) => {\n  /* Block handles the state of the column tables to be rendered */\n  const [block, setBlock] = useState(\"AM\");\n  /* FilteredInfo handles the mentors and days to be filtered */\n  const [filteredInfo, setFilteredInfo] = useState({});\n  /* SortedInfo handles the information for sorting the mentor column */\n  const [sortedInfo, setSortedInfo] = useState({});\n  /*State that detects when a  meeting is cancelled */\n  const [cancelMeeting, setCancelMeeting] = useState(false);\n\n  const getData = async (path) => {\n    const response = await fetch(\n     `http://localhost:3033/api/${path}`,\n     {\n       method: 'GET',\n       headers: {\n         'content-Type': 'application/json',\n         Accept: 'aplication/json',\n       },\n     } \n    )\n    return response.json();\n  }; \n \n  useEffect(async() => {\n    if (cancelMeeting === true) {\n    let result = await axios('http://localhost:3033/api/table');\n    setResSchedule(result);\n    setCancelMeeting(false);\n    }\n  }, [cancelMeeting]);\n\n  const AM = [\n    {\n      title: \"Mentor\",\n      dataIndex: \"Mentor\",\n      key: \"Mentor\",\n      filters: mentor_am.sort(function (a, b) {\n        let nameA = a.text.toUpperCase(); // ignore upper and lowercase\n        let nameB = b.text.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        // names must be equal\n        return 0;\n      }),\n      sorter: (a, b) => {\n        let nameA = a.Mentor.toUpperCase(); // ignore upper and lowercase\n        let nameB = b.Mentor.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        // names must be equal\n        return 0;\n      },\n      sortOrder: sortedInfo.columnKey === \"Mentor\" && sortedInfo.order,\n      filteredValue: filteredInfo?.Mentor || null,\n      onFilter: (value, record) => record.Mentor.indexOf(value) === 0,\n      width: 150,\n      background: \"#FFFFFF\",\n      fixed: \"left\",\n      align: \"left\",\n    },\n    {\n      title: \"Day\",\n      dataIndex: \"Day\",\n      key: \"Day\",\n      filters: days_filter,\n      filteredValue: filteredInfo?.Day || null,\n      onFilter: (value, record) => record.Day.indexOf(value) === 0,\n      width: 100,\n      fixed: \"left\",\n      align: \"left\",\n    },\n    {\n      title: \"08:00\",\n      dataIndex: \"08:00:00\",\n      key: \"08:00:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"08:20\",\n      dataIndex: \"08:20:00\",\n      key: \"08:20:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"08:40\",\n      dataIndex: \"08:40:00\",\n      key: \"08:40:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"09:00\",\n      dataIndex: \"09:00:00\",\n      key: \"09:00:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"09:20\",\n      dataIndex: \"09:20:00\",\n      key: \"09:20:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"09:40\",\n      dataIndex: \"09:40:00\",\n      key: \"09:40:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"10:00\",\n      dataIndex: \"10:00:00\",\n      key: \"10:00:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"10:20\",\n      dataIndex: \"10:20:00\",\n      key: \"10:20\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"10:40\",\n      dataIndex: \"10:40:00\",\n      key: \"10:40:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"11:00\",\n      dataIndex: \"11:00:00\",\n      key: \"11:00:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"11:20\",\n      dataIndex: \"11:20:00\",\n      key: \"11:20:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"11:40\",\n      dataIndex: \"11:40:00\",\n      key: \"11:40:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n  ];\n\n  /* Description of the Columns for the PM block table */\n  const PM = [\n    {\n      title: \"Mentor\",\n      dataIndex: \"Mentor\",\n      key: \"Mentor\",\n      filters: mentor_pm.sort(function (a, b) {\n        var nameA = a.text.toUpperCase(); // ignore upper and lowercase\n        var nameB = b.text.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n\n        // names must be equal\n        return 0;\n      }),\n      sorter: (a, b) => {\n        let nameA = a.Mentor.toUpperCase(); // ignore upper and lowercase\n        let nameB = b.Mentor.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        // names must be equal\n        return 0;\n      },\n      sortOrder: sortedInfo.columnKey === \"Mentor\" && sortedInfo.order,\n      filteredValue: filteredInfo?.Mentor || null,\n      onFilter: (value, record) => record.Mentor.indexOf(value) === 0,\n      sortOrder: sortedInfo.columnKey === \"Mentor\" && sortedInfo.order,\n      width: 150,\n      fixed: \"left\",\n      align: \"left\",\n    },\n    {\n      title: \"Day\",\n      dataIndex: \"Day\",\n      key: \"Day\",\n      filters: days_filter,\n      filteredValue: filteredInfo?.Day || null,\n      onFilter: (value, record) => record.Day.indexOf(value) === 0,\n      width: 100,\n      fixed: \"left\",\n      align: \"left\",\n    },\n    {\n      title: \"13:00\",\n      dataIndex: \"13:10:00\",\n      key: \"13:10:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"13:20\",\n      dataIndex: \"13:30:00\",\n      key: \"13:30:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"13:40\",\n      dataIndex: \"13:50:00\",\n      key: \"13:50:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"14:00\",\n      dataIndex: \"14:10:00\",\n      key: \"14:00:10\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"14:20\",\n      dataIndex: \"14:30:00\",\n      key: \"14:30:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"14:40\",\n      dataIndex: \"14:50:00\",\n      key: \"14:50:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"15:00\",\n      dataIndex: \"15:10:00\",\n      key: \"15:10:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"15:20\",\n      dataIndex: \"15:30:00\",\n      key: \"15:30:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"15:40\",\n      dataIndex: \"15:50:00\",\n      key: \"15:50:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"16:00\",\n      dataIndex: \"16:10:00\",\n      key: \"16:10:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"16:20\",\n      dataIndex: \"16:30:00\",\n      key: \"16:30:00\",\n      render(text, record) {\n        return cell_color(text, record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n    {\n      title: \"16:40\",\n      dataIndex: \"16:50:00\",\n      key: \"16:50:00\",\n      render(text, record) {\n        return cell_color(text,record);\n      },\n      align: \"center\",\n      width: 130,\n    },\n  ];\n \n  /* This function is in charge to color format every cell on the schedule table according to the company */\n  function cell_color(text, record) {\n    if (text !== null) {\n      let color = list_comp_colors.filter((obj) => {\n        return obj.company === text;\n      });\n      let col_row;\n      col_row = color ? color[0]?.color : \"#FFFFFF\";\n      return {\n        props: {\n          style: {\n            backgroundColor: col_row,\n            borderRadius: \"10px\",\n            bordered: \"10px\",\n          },\n        },\n        children: <CellPopUp text={text} record={record} setCancelMeeting={setCancelMeeting}/>,\n      };\n    } else {\n      return { children: <div>{text}</div> };\n    }\n  }\n\n  /* Handle the change on the filter and sorters components */\n  const handleChange = (pagination, filters, sorter) => {\n    // console.log(\"Various parameters\", pagination, filters, sorter);\n    setFilteredInfo(filters);\n    setSortedInfo(sorter);\n  };\n\n  /* Handles the clear for the filters */\n  const clearFilters = () => {\n    setFilteredInfo(null);\n  };\n \n  /* handles the display of the AM and PM tables */\n  const handleBlock = (value) => {\n    setBlock(value);\n  };\n  let dataFilterAM = resSchedule.filter((row) => row.Block === \"AM\");\n  let dataFilterPM = resSchedule.filter((row) => row.Block === \"PM\");\n  /* Wrangling the recieved data to generate the list to filter the mentors and the days*/\n  const mentor_am_filter = resSchedule.filter((obj) => {\n    return obj.Block === \"AM\";\n  });\n  const mentor_am = mentor_am_filter.map((obj) => {\n    return { text: obj.Mentor, value: obj.Mentor };\n  });\n  const mentor_pm_filter = resSchedule.filter((obj) => {\n    return obj.Block === \"PM\";\n  });\n  const mentor_pm = mentor_pm_filter.map((obj) => {\n    return { text: obj.Mentor, value: obj.Mentor };\n  });\n  const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n  const days_filter = days.map((day) => {\n    return { text: day, value: day };\n  });\n\n  const list_comp = companies.map((obj) => {\n  return obj.company;\n});\nconst list_comp_colors = list_comp.map((comp, index) => {\n  let col = colors[index];\n  return { company: comp, color: col };\n});\n\n /* Generate the download file *//*  \n  const dataFilterAMPop = dataFilterAM.map((obj) => {\n    delete obj[\"Slots\"];\n    return obj;\n  });\n  const dataFilterPMPop = dataFilterPM.map((obj) => {\n    delete obj[\"Slots\"];\n    return obj;\n  }); */\n  let download = jsonToCSV(JSON.stringify(resSchedule)) /* +\n    \"\\n\\n\\n\\n\" +\n    jsonToCSV(JSON.stringify(dataFilterPMPop)); */\n\n   /* render the button download if the data is available */\n  const renderDownload = () => {\n    if (resSchedule.length > 0) {\n      return (\n        <CSVDownloader\n          className=\"downloadBtn\"\n          data={download}\n          type=\"button\"\n          filename={\"schedule\"}\n          style={{\n            color: \"#fff\",\n            backgroundColor: \"#39C463\",\n            borderRadius: \"5px\",\n            height: 32,\n            borderColor: \"#39C463\",\n            width: 110,\n            disable: true,\n          }}\n          bom={true}\n        >\n          Download\n        </CSVDownloader>\n      );\n    }\n  };\n\n  return (\n    <>\n      <Space style={{ marginBottom: 16, marginLeft: 20 }}>\n        <span>Select Block:</span>\n        <Select defaultValue=\"AM\" style={{ width: 110 }} onChange={handleBlock}>\n          <Option value=\"AM\">AM</Option>\n          <Option value=\"PM\">PM</Option>\n        </Select>\n        <Button onClick={clearFilters}>Clear filters</Button>\n        {renderDownload()}\n      </Space>\n      {tableDisplay ? <Table\n        className=\"ant-table-layout-fixed\"\n        style={{ marginBottom: 5 }}\n        bordered\n        pagination={{ pageSize: 50 }}\n        scroll={{ x: \"max-content\" }} \n        size=\"small\"\n        columns={block === \"AM\" ? AM : PM}\n        sticky\n        dataSource={block === \"AM\" ? dataFilterAM : dataFilterPM}\n        onChange={handleChange}\n        rowKey={(record) => record.uid}\n      />: null}\n    </>\n  );\n};\n\nexport default TableSchedule;"]},"metadata":{},"sourceType":"module"}