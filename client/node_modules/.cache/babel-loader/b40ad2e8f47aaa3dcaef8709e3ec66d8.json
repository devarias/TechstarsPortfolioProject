{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianorozco/techstars_app/client/src/components/uploadFile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport { Button } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport '../styles/uploadFile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CSVReader2 = ({\n  setResSchedule,\n  setViewSelected,\n  setView\n}) => {\n  _s();\n\n  const [isReset, setIsReset] = useState(false);\n  const [json_data, setJsonData] = useState([]);\n\n  const handleOnDrop = data => {\n    const data_list = data.map(row => row.data);\n    setJsonData(JSON.stringify(data_list));\n  };\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    alert(err);\n    setIsReset(true);\n  };\n\n  const handleSubmit = () => {\n    if (window.confirm(\"A new meeting calendar is going to be generated\\n Do you want to continue?\")) {\n      fetch('http://localhost:3033/api/schedule', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: json_data\n      }).then(response => response.json()).then(result => {\n        setResSchedule(result);\n      }).catch(error => {\n        console.error('Error:', error);\n        setIsReset(true);\n        setView(1);\n        setViewSelected(['1']);\n      });\n      setIsReset(true);\n    } else {\n      setIsReset(true);\n    }\n  };\n\n  const handleOnRemoveFile = data => {\n    setIsReset(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CSVReader, {\n      accept: \".csv\",\n      onDrop: handleOnDrop,\n      onError: handleOnError,\n      addRemoveButton: true,\n      isReset: isReset,\n      onRemoveFile: handleOnRemoveFile,\n      config: {\n        header: true\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Drop CSV file here or click to upload.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"submit\",\n      type: \"primary\",\n      shape: \"round\",\n      icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 71\n      }, this),\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CSVReader2, \"0tVSDNzk7LquUuNJijtQ0vG/V9A=\");\n\n_c = CSVReader2;\nexport default CSVReader2;\n\nvar _c;\n\n$RefreshReg$(_c, \"CSVReader2\");","map":{"version":3,"sources":["/Users/sebastianorozco/techstars_app/client/src/components/uploadFile.jsx"],"names":["React","useState","CSVReader","Button","SendOutlined","CSVReader2","setResSchedule","setViewSelected","setView","isReset","setIsReset","json_data","setJsonData","handleOnDrop","data","data_list","map","row","JSON","stringify","handleOnError","err","file","inputElem","reason","alert","handleSubmit","window","confirm","fetch","method","headers","Accept","body","then","response","json","result","catch","error","console","handleOnRemoveFile","header"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport { Button } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport '../styles/uploadFile.css'\n\nconst CSVReader2 = ({setResSchedule, setViewSelected,setView}) => {\n  const [isReset, setIsReset] = useState(false);\n  const [json_data, setJsonData] = useState([]);\n\n  const handleOnDrop = (data) => {\n    const data_list = data.map((row) => row.data);\n    setJsonData(JSON.stringify(data_list));\n  };\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    alert(err);\n    setIsReset(true)\n  };\n\n  const handleSubmit = () => {\n    if (window.confirm(\"A new meeting calendar is going to be generated\\n Do you want to continue?\")) {\n      fetch(\n        'http://localhost:3033/api/schedule',\n        {\n            method: 'POST',\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\"\n            },\n            body: json_data,\n        }\n    )\n        .then((response) => response.json())\n        .then((result) => {\n            setResSchedule(result);\n                \n        })\n        .catch((error) => {\n            console.error('Error:', error);\n            setIsReset(true);\n            setView(1);\n            setViewSelected(['1']);   \n        });\n        setIsReset(true);\n    } else {\n        setIsReset(true);\n    }\n    \n  }\n\n  const handleOnRemoveFile = (data) => {\n    setIsReset(true);\n  };\n\n    return (\n      <>\n        <CSVReader\n          accept=\".csv\"\n          onDrop={handleOnDrop}\n          onError={handleOnError}\n          addRemoveButton\n          isReset={isReset}\n          onRemoveFile={handleOnRemoveFile}\n          config={{header: true}}\n        >\n        <span>Drop CSV file here or click to upload.</span>\n        </CSVReader>\n        <Button className=\"submit\" type=\"primary\" shape=\"round\" icon={<SendOutlined/>} onClick={handleSubmit}>Submit</Button>\n      </>\n    );\n}\n\nexport default CSVReader2;"]},"metadata":{},"sourceType":"module"}