{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_heroku/client/src/Parts/buttonReschedule.jsx\";\nimport React from \"react\";\nimport { Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RescheduleButton = ({\n  view,\n  record,\n  setPossibleMeetings,\n  setView\n}) => {\n  const cancelMeeting = () => {\n    console.log(JSON.stringify([record]));\n\n    if (view === 0) {\n      fetch(\"http://localhost:3033/api/reschedule\"\n      /* Route to send the CSV file to \n         generate the schedule */\n      , {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify([record])\n      }).then(response => response.json()).then(result => {\n        setPossibleMeetings(result);\n        setView(1);\n      }).catch(error => {\n        console.log(\"Error:\", error);\n      });\n    } else {\n      fetch(\"http://localhost:3033/api/meetings\"\n      /* Route to send the CSV file to \n           generate the schedule */\n      , {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify([record])\n      }).then(response => response.json()).then(result => {\n        alert(result.message);\n        setView(0);\n      }).catch(error => {\n        console.log(\"Error:\", error);\n      });\n    }\n  };\n\n  const buttonMessage = ['Reschedule', 'Schedule'];\n  let message = buttonMessage[view];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: cancelMeeting,\n      children: view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = RescheduleButton;\nexport default RescheduleButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"RescheduleButton\");","map":{"version":3,"sources":["/home/omsebas/techstars_heroku/client/src/Parts/buttonReschedule.jsx"],"names":["React","Button","RescheduleButton","view","record","setPossibleMeetings","setView","cancelMeeting","console","log","JSON","stringify","fetch","method","headers","Accept","body","then","response","json","result","catch","error","alert","message","buttonMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,mBAAhB;AAAqCC,EAAAA;AAArC,CAAD,KAAoD;AAG3E,QAAMC,aAAa,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe,CAACP,MAAD,CAAf,CAAZ;;AACF,QAAID,IAAI,KAAK,CAAb,EAAgB;AAChBS,MAAAA,KAAK,CACC;AAAuC;AACjD;AAFS,QAGC;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFX;AAMEC,QAAAA,IAAI,EAAEN,IAAI,CAACC,SAAL,CAAe,CAACP,MAAD,CAAf;AANR,OAHD,CAAL,CAYOa,IAZP,CAYaC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAZ1B,EAaOF,IAbP,CAaaG,MAAD,IAAY;AAChBf,QAAAA,mBAAmB,CAACe,MAAD,CAAnB;AACAd,QAAAA,OAAO,CAAC,CAAD,CAAP;AACD,OAhBP,EAiBOe,KAjBP,CAiBcC,KAAD,IAAW;AAChBd,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBa,KAAtB;AACD,OAnBP;AAoBC,KArBD,MAqBO;AACLV,MAAAA,KAAK,CACD;AAAqC;AAC/C;AAFW,QAGD;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFX;AAMEC,QAAAA,IAAI,EAAEN,IAAI,CAACC,SAAL,CAAe,CAACP,MAAD,CAAf;AANR,OAHC,CAAL,CAYKa,IAZL,CAYWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAZxB,EAaKF,IAbL,CAaWG,MAAD,IAAY;AAChBG,QAAAA,KAAK,CAACH,MAAM,CAACI,OAAR,CAAL;AACAlB,QAAAA,OAAO,CAAC,CAAD,CAAP;AACD,OAhBL,EAiBKe,KAjBL,CAiBYC,KAAD,IAAW;AAChBd,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBa,KAAtB;AACD,OAnBL;AAqBD;AAEF,GA/CD;;AAgDA,QAAMG,aAAa,GAAG,CAAC,YAAD,EAAe,UAAf,CAAtB;AACA,MAAID,OAAO,GAAGC,aAAa,CAACtB,IAAD,CAA3B;AACA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAEI,aAA7B;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CA5DD;;KAAMD,gB;AA8DN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\n\nconst RescheduleButton = ({ view, record, setPossibleMeetings, setView }) => {\n\n\n  const cancelMeeting = () => {\n      console.log(JSON.stringify([record]));\n    if (view === 0) {\n    fetch(\n          \"http://localhost:3033/api/reschedule\" /* Route to send the CSV file to \n                                                    generate the schedule */,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            body: JSON.stringify([record]),\n          }\n        )\n          .then((response) => response.json())\n          .then((result) => {\n            setPossibleMeetings(result);\n            setView(1);\n          })\n          .catch((error) => {\n            console.log(\"Error:\", error);\n          });\n    } else {\n      fetch(\n          \"http://localhost:3033/api/meetings\" /* Route to send the CSV file to \n                                                    generate the schedule */,\n          {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            body: JSON.stringify([record]),\n          }\n        )\n          .then((response) => response.json())\n          .then((result) => {\n            alert(result.message);\n            setView(0);\n          })\n          .catch((error) => {\n            console.log(\"Error:\", error);\n          });\n\n    }\n\n  };\n  const buttonMessage = ['Reschedule', 'Schedule'];\n  let message = buttonMessage[view];\n  return (\n    <>\n      <Button type=\"link\" onClick={cancelMeeting}>\n        {view}\n      </Button>\n    </>\n  );\n};\n\nexport default RescheduleButton;"]},"metadata":{},"sourceType":"module"}