{"ast":null,"code":"var _jsxFileName = \"/home/omsebas/techstars_heroku/client/src/components/TableReschedule.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Table } from \"antd\";\nimport RescheduleButton from \"../Parts/buttonReschedule\";\nimport SelectionButton from \"../Parts/buttonSelection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TableReschedule = ({\n  mentors,\n  pendingMeetings,\n  setRechargeReschedule\n}) => {\n  _s();\n\n  const [possibleMeetings, setPossibleMeetings] = useState([]);\n  const [view, setView] = useState(0);\n  /* FilteredInfo handles the mentors and days to be filtered */\n\n  const [filteredInfo, setFilteredInfo] = useState({});\n  /* SortedInfo handles the information for sorting the mentor column */\n\n  const [sortedInfo, setSortedInfo] = useState({});\n  console.log(pendingMeetings);\n  const mentor_list = pendingMeetings.map(row => {\n    return {\n      text: row.mentor,\n      value: row.mentor\n    };\n  });\n  console.log(mentor_list);\n  const columnsAction = [{\n    title: \"mentor\",\n    width: 100,\n    dataIndex: \"mentor\",\n    key: \"mentor\",\n    fixed: \"left\",\n    filters: mentor_list.sort(function (a, b) {\n      let nameA = a.text.toUpperCase(); // ignore upper and lowercase\n\n      let nameB = b.text.toUpperCase(); // ignore upper and lowercase\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      } // names must be equal\n\n\n      return 0;\n    }),\n    sorter: (a, b) => {\n      let nameA = a.mentor.toUpperCase(); // ignore upper and lowercase\n\n      let nameB = b.mentor.toUpperCase(); // ignore upper and lowercase\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      } // names must be equal\n\n\n      return 0;\n    },\n    sortOrder: sortedInfo.columnKey === \"mentor\" && sortedInfo.order,\n    filteredValue: (filteredInfo === null || filteredInfo === void 0 ? void 0 : filteredInfo.Mentor) || null\n  }, {\n    title: \"Companies\",\n    width: 100,\n    dataIndex: \"Companies\",\n    key: \"Companies\",\n    fixed: \"left\",\n\n    render(record) {\n      let text = record.join(\", \");\n      return {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 28\n        }, this)\n      };\n    }\n\n  }, {\n    title: \"Action\",\n    key: \"operation\",\n    fixed: \"right\",\n    width: 100,\n    render: record => /*#__PURE__*/_jsxDEV(RescheduleButton, {\n      record: record,\n      setPossibleMeetings: setPossibleMeetings,\n      setView: setView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }];\n  const columnsSelection = [{\n    title: \"mentor\",\n    width: 100,\n    dataIndex: \"Mentor\",\n    key: \"mentor1\",\n    fixed: \"left\"\n  }, {\n    title: \"Day\",\n    width: 100,\n    dataIndex: \"Day\",\n    key: \"Day\",\n    fixed: \"left\"\n  }, {\n    title: \"Block\",\n    width: 100,\n    dataIndex: \"Block\",\n    key: \"Block\",\n    fixed: \"left\"\n  }, {\n    title: \"Action\",\n    key: \"operation\",\n    fixed: \"right\",\n    width: 100,\n    render: record => /*#__PURE__*/_jsxDEV(SelectionButton, {\n      view: view,\n      record: record,\n      setRechargeReschedule: setRechargeReschedule,\n      setView: setView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)\n  }];\n\n  const handleChange = (pagination, filters, sorter) => {\n    setFilteredInfo(filters);\n    setSortedInfo(sorter);\n  };\n\n  const pageView = [/*#__PURE__*/_jsxDEV(Table, {\n    title: () => \"Please click on reschedule to display the options for the mentor\",\n    size: \"small\",\n    columns: columnsAction,\n    dataSource: pendingMeetings,\n    scroll: {\n      x: \"max-content\"\n    },\n    pagination: {\n      pageSize: 50\n    },\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Table, {\n    title: () => \"These are the available options to reschedule the mentor. \\nPlease select a day and block and click on program meetings to generate the new schedule\",\n    size: \"small\",\n    columns: columnsSelection,\n    dataSource: possibleMeetings,\n    scroll: {\n      x: \"max-content\"\n    },\n    pagination: {\n      pageSize: 50\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pageView[view]\n  }, void 0, false);\n};\n\n_s(TableReschedule, \"CjxqU9ZHJIiEFjK11R75avqYqic=\");\n\n_c = TableReschedule;\nexport default TableReschedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableReschedule\");","map":{"version":3,"sources":["/home/omsebas/techstars_heroku/client/src/components/TableReschedule.jsx"],"names":["React","useState","useRef","Table","RescheduleButton","SelectionButton","TableReschedule","mentors","pendingMeetings","setRechargeReschedule","possibleMeetings","setPossibleMeetings","view","setView","filteredInfo","setFilteredInfo","sortedInfo","setSortedInfo","console","log","mentor_list","map","row","text","mentor","value","columnsAction","title","width","dataIndex","key","fixed","filters","sort","a","b","nameA","toUpperCase","nameB","sorter","sortOrder","columnKey","order","filteredValue","Mentor","render","record","join","children","columnsSelection","handleChange","pagination","pageView","x","pageSize"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Table } from \"antd\";\nimport RescheduleButton from \"../Parts/buttonReschedule\";\nimport SelectionButton from \"../Parts/buttonSelection\";\n\nconst TableReschedule = ({\n  mentors,\n  pendingMeetings,\n  setRechargeReschedule,\n}) => {\n  const [possibleMeetings, setPossibleMeetings] = useState([]);\n  const [view, setView] = useState(0);\n  /* FilteredInfo handles the mentors and days to be filtered */\n  const [filteredInfo, setFilteredInfo] = useState({});\n  /* SortedInfo handles the information for sorting the mentor column */\n  const [sortedInfo, setSortedInfo] = useState({});\n  console.log(pendingMeetings);\n  const mentor_list = pendingMeetings.map((row) => {\n    return { text: row.mentor, value: row.mentor };\n  });\n  console.log(mentor_list);\n  const columnsAction = [\n    {\n      title: \"mentor\",\n      width: 100,\n      dataIndex: \"mentor\",\n      key: \"mentor\",\n      fixed: \"left\",\n      filters: mentor_list.sort(function (a, b) {\n        let nameA = a.text.toUpperCase(); // ignore upper and lowercase\n        let nameB = b.text.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        // names must be equal\n        return 0;\n      }),\n      sorter: (a, b) => {\n        let nameA = a.mentor.toUpperCase(); // ignore upper and lowercase\n        let nameB = b.mentor.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        // names must be equal\n        return 0;\n      },\n      sortOrder: sortedInfo.columnKey === \"mentor\" && sortedInfo.order,\n      filteredValue: filteredInfo?.Mentor || null,\n    },\n    {\n      title: \"Companies\",\n      width: 100,\n      dataIndex: \"Companies\",\n      key: \"Companies\",\n      fixed: \"left\",\n      render(record) {\n        let text = record.join(\", \");\n        return { children: <div>{text}</div> };\n      },\n    },\n    {\n      title: \"Action\",\n      key: \"operation\",\n      fixed: \"right\",\n      width: 100,\n      render: (record) => (\n        <RescheduleButton\n          record={record}\n          setPossibleMeetings={setPossibleMeetings}\n          setView={setView}\n        />\n      ),\n    },\n  ];\n\n  const columnsSelection = [\n    {\n      title: \"mentor\",\n      width: 100,\n      dataIndex: \"Mentor\",\n      key: \"mentor1\",\n      fixed: \"left\",\n    },\n    {\n      title: \"Day\",\n      width: 100,\n      dataIndex: \"Day\",\n      key: \"Day\",\n      fixed: \"left\",\n    },\n    {\n      title: \"Block\",\n      width: 100,\n      dataIndex: \"Block\",\n      key: \"Block\",\n      fixed: \"left\",\n    },\n    {\n      title: \"Action\",\n      key: \"operation\",\n      fixed: \"right\",\n      width: 100,\n      render: (record) => (\n        <SelectionButton\n          view={view}\n          record={record}\n          setRechargeReschedule={setRechargeReschedule}\n          setView={setView}\n        />\n      ),\n    },\n  ];\n  const handleChange = (pagination, filters, sorter) => {\n    setFilteredInfo(filters);\n    setSortedInfo(sorter);\n  };\n  const pageView = [\n    <Table\n      title={() =>\n        \"Please click on reschedule to display the options for the mentor\"\n      }\n      size=\"small\"\n      columns={columnsAction}\n      dataSource={pendingMeetings}\n      scroll={{ x: \"max-content\" }}\n      pagination={{ pageSize: 50 }}\n      onChange={handleChange}\n    />,\n    <Table\n      title={() =>\n        \"These are the available options to reschedule the mentor. \\nPlease select a day and block and click on program meetings to generate the new schedule\"\n      }\n      size=\"small\"\n      columns={columnsSelection}\n      dataSource={possibleMeetings}\n      scroll={{ x: \"max-content\" }}\n      pagination={{ pageSize: 50 }}\n    />,\n  ];\n\n  return <>{pageView[view]}</>;\n};\n\nexport default TableReschedule;\n"]},"metadata":{},"sourceType":"module"}